{"version":3,"file":"component---src-pages-mesh-basic-handlers-soap-md-46751b477f669e8043a9.js","mappings":"oSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kBACL,uBAAYC,WAAW,MAAO,QAAqB,cACtD,SAACX,EAAD,CAAaY,QAAQ,UAAUC,MAAM,OAAOH,QAAQ,iBACpD,kBAAK,uFACL,SAACV,EAAD,CAAaY,QAAQ,UAAUC,MAAM,OAAOH,QAAQ,iBACpD,kBAAK,0JACL,kBAAK,2CAAyC,cAAGC,WAAW,IACxD,KAAQ,sBACL,QAAY,KAAG,uBAAYA,WAAW,KAAM,QAAqB,uEACxE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,mmBAsBP,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,0DAAwD,cAAGC,WAAW,IACvE,KAAQ,sDACL,oBAAwB,6CAC/B,kBAAK,oCACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,mmBAsBP,eACE,GAAM,oBACH,qBACL,kBAAK,iEACL,oBACE,eAAIA,WAAW,MAAO,MAAI,uBAAYA,WAAW,MAAO,UAAuB,iBAAe,uBAAYA,WAAW,MAAO,QAAqB,+CAC/I,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,2FAG1B,eAAIA,WAAW,MAAO,oEAAkE,uBAAYA,WAAW,MAAO,aAA0B,WAC9I,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,wDAG1B,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,mBAAgC,8BAA4B,uBAAYA,WAAW,MAAO,sBAC5I,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,aAA0B,iCAE9E,eACE,GAAM,YACH,aACL,kBAAK,qDAAmD,uBAAYA,WAAW,KAAM,YAAyB,kBAAgB,uBAAYA,WAAW,KAAM,SAAsB,+CACjL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,qNAWP,eACE,GAAM,wBACH,yBACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,UAAuB,WAAS,uBAAYA,WAAW,MAAO,UAAuB,yDAAuD,uBAAYA,WAAW,MAAO,UAC5N,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,QAAqB,YAAU,uBAAYA,WAAW,MAAO,UAAuB,6DAA2D,uBAAYA,WAAW,MAAO,YAC/N,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,iBAA8B,YAAU,uBAAYA,WAAW,MAAO,OAAoB,oFAC1I,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,2BAAyB,uBAAYA,WAAW,MAAO,OAAoB,QAAM,uBAAYA,WAAW,MAAO,OAAoB,4BAA0B,uBAAYA,WAAW,MAAO,iBAA8B,qBAGnP,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,oBAAiC,YAAU,uBAAYA,WAAW,MAAO,QAAqB,oFAIrJ,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://graphql-mesh-gateway/./src/pages/mesh/basic/handlers/soap.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"soap-handlers\"\n    }}><inlineCode parentName=\"h1\">{`soap`}</inlineCode>{` handlers`}</h1>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The SOAP handler is experimental and should not be used in production deployments.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Edge meshes do not currently support Hooks. If you are using hooks, you must use a legacy mesh. Hooks will be available in edge meshes in the future.`}</p>\n    <p>{`The SOAP handler allows you to consume `}<a parentName=\"p\" {...{\n        \"href\": \"https://soapui.org\"\n      }}>{`SOAP`}</a>{` `}<inlineCode parentName=\"p\">{`WSDL`}</inlineCode>{` files and generate a remote executable schema for those services.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"SoapSource\",\n        \"handler\": {\n          \"soap\": {\n            \"source\": \"http://<Commerce Host>/soap?wsdl&services=customerCustomerRepositoryV1\",\n            \"wsdl\": \"http://<Commerce Host>/soap?wsdl&services=customerCustomerRepositoryV1\",\n            \"operationHeaders\": {\n              \"x-operation-header-key\": \"sample-x-operation-header-value\"\n            },\n            \"schemaHeaders\": {\n              \"x-schema-header-key\": \"sample-x-schema-header-value\"\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If your source handler's schema is modified, you must `}<a parentName=\"p\" {...{\n        \"href\": \"../../basic/create-mesh.md#update-an-existing-mesh\"\n      }}>{`update your mesh`}</a>{` to allow API Mesh to cache any changes.`}</p>\n    <p>{`Add SOAP handlers to your mesh:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"SoapSource\",\n        \"handler\": {\n          \"soap\": {\n            \"source\": \"http://<Commerce Host>/soap?wsdl&services=customerCustomerRepositoryV1\",\n            \"wsdl\": \"http://<Commerce Host>/soap?wsdl&services=customerCustomerRepositoryV1\",\n            \"operationHeaders\": {\n              \"x-operation-header-key\": \"sample-x-operation-header-value\"\n            },\n            \"schemaHeaders\": {\n              \"x-schema-header-key\": \"sample-x-schema-header-value\"\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"soap-limitations\"\n    }}>{`SOAP limitations`}</h2>\n    <p>{`The experimental SOAP handler has the following limitations:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`source`}</inlineCode>{` field and a `}<inlineCode parentName=\"li\">{`wsdl`}</inlineCode>{` field (with identical values) are required`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This redundancy is a temporary limitation and will be addressed in a future release.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If you do not provide an expected argument, you will receive an `}<inlineCode parentName=\"li\">{`undefined`}</inlineCode>{` error.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This error will be clarified in a future release.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`context.headers`}</inlineCode>{` are not available inside `}<inlineCode parentName=\"li\">{`operationHeaders`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mutations`}</inlineCode>{` must be used when querying`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"querying\"\n    }}>{`Querying`}</h2>\n    <p>{`When querying a SOAP source inside a mesh, use a `}<inlineCode parentName=\"p\">{`mutation`}</inlineCode>{` instead of a `}<inlineCode parentName=\"p\">{`query`}</inlineCode>{`, as illustrated in the following example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation {\n  catalogProductRepositoryV1Get(\n    sku: \"product_dynamic_249\"\n    editMode: true\n    storeId: 1\n    forceReload: true\n  ),\n\n  catalogCategoryListV1GetList(searchCriteria:\"category\")\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"config-api-reference\"\n    }}>{`Config API reference`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`source`}</inlineCode>{`(type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required) - URL to your WSDL, must be identical to `}<inlineCode parentName=\"li\">{`wsdl`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`wsdl`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required) - URL to your WSDL, must be identical to the `}<inlineCode parentName=\"li\">{`source`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`schemaHeaders`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Any`}</inlineCode>{`) - JSON object for adding headers to API calls for runtime schema introspection`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can also provide a `}<inlineCode parentName=\"li\">{`.js`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`.ts`}</inlineCode>{` file path that exports `}<inlineCode parentName=\"li\">{`schemaHeaders`}</inlineCode>{` as an object.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`operationHeaders`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`JSON`}</inlineCode>{`) - JSON object for adding headers to API calls for runtime operation execution`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}