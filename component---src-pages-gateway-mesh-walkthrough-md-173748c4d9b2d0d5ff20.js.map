{"version":3,"file":"component---src-pages-gateway-mesh-walkthrough-md-173748c4d9b2d0d5ff20.js","mappings":"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","sources":["webpack://graphql-mesh-gateway/./src/pages/gateway/mesh_walkthrough.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"api-mesh-walkthrough\"\n    }}>{`API Mesh walkthrough`}</h1>\n    <p>{`This walkthrough covers the basic actions you can perform in a mesh using API Mesh for Adobe Developer App Builder.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`An Adobe IO account to access the `}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.adobe.com/console\"\n          }}>{`Adobe Developer Console`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install `}<a parentName=\"p\" {...{\n            \"href\": \"https://nodejs.org/en/download/\"\n          }}><inlineCode parentName=\"a\">{`Node.js`}</inlineCode></a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can run `}<inlineCode parentName=\"li\">{`node -v`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`npm -v`}</inlineCode>{` to determine if `}<inlineCode parentName=\"li\">{`node.js`}</inlineCode>{` is successfully installed.`}</li>\n        </ul>\n        <p parentName=\"li\">{`NOTE: Restart your IDE after installing `}<inlineCode parentName=\"p\">{`node`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install a Node Version Manager (`}<inlineCode parentName=\"p\">{`nvm`}</inlineCode>{`)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`(macOS and Linux) - `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/nvm-sh/nvm\"\n            }}>{`Node Version Manager`}</a></li>\n          <li parentName=\"ul\">{`(Windows) - `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/coreybutler/nvm-windows\"\n            }}>{`nvm-windows`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install the `}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.adobe.com/runtime/docs/guides/tools/cli_install/\"\n          }}>{`Adobe `}<inlineCode parentName=\"a\">{`aio`}</inlineCode>{` CLI`}</a>{` with the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install -g @adobe/aio-cli\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"create-a-project-and-workspace\"\n    }}>{`Create a project and workspace`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.adobe.com/console\"\n          }}>{`Adobe Developer Console`}</a>{`, select the desired organization from the dropdown in the top-right corner.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Then click `}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.adobe.com/developer-console/docs/guides/projects/projects-template/\"\n          }}><strong parentName=\"a\">{`Create project from template`}</strong></a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select `}<strong parentName=\"p\">{`App Builder`}</strong>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the `}<strong parentName=\"p\">{`Project title`}</strong>{` to \"my_test_workspace\".`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click Save. You now have a project named \"my_test_workspace\" with workspaces named \"Production\" and \"Stage\".`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"install-the-api-mesh-plugin\"\n    }}>{`Install the API Mesh plugin`}</h2>\n    <p>{`Install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@adobe/aio-cli-plugin-api-mesh\"\n      }}>{`API Mesh plugin`}</a>{` with the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install -g @adobe/aio-cli-plugin-api-mesh\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-a-local-directory\"\n    }}>{`Create a local directory`}</h2>\n    <p>{`Create a local directory named \"mesh_example\". Then navigate to that directory in your CLI by using a command similar to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd my_path/mesh_example\n`}</code></pre>\n    <p>{`This directory will contain your `}<inlineCode parentName=\"p\">{`mesh.json`}</inlineCode>{` file, the configuration file for your mesh.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-mesh\"\n    }}>{`Create a mesh`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following command to log into Adobe IO:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`aio login\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a file named `}<inlineCode parentName=\"p\">{`mesh.json`}</inlineCode>{` with the following contents:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`  {\n    \"meshConfig\": {\n      \"sources\": [\n        {\n          \"name\": \"REST\",\n          \"handler\": {\n            \"openapi\": {\n              \"source\": \"https://venia.magento.com/rest/all/schema?services=all\"\n            }\n          }\n        },\n        {\n          \"name\": \"GraphQL\",\n          \"handler\": {\n            \"graphql\": {\n              \"endpoint\": \"https://venia.magento.com/graphql\"\n            }\n          }\n        }\n      ]\n    }\n  }\n`}</code></pre>\n        <p parentName=\"li\">{`This mesh configuration file specifies the `}<inlineCode parentName=\"p\">{`sources`}</inlineCode>{` where you get data from and the `}<inlineCode parentName=\"p\">{`transforms`}</inlineCode>{` that manipulate that data. Here we are using `}<inlineCode parentName=\"p\">{`venia.magento.com`}</inlineCode>{`, which is a publicly available Adobe Commerce sample storefront.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`aio api-mesh:create mesh.json\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use the arrow keys to select the `}<inlineCode parentName=\"p\">{`my_test_workspace`}</inlineCode>{` Project and click `}<strong parentName=\"p\">{`Enter`}</strong>{`. Type `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` to indicate you want to use this project for future operations. Then press the `}<strong parentName=\"p\">{`Enter`}</strong>{` key.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use the arrow keys to select the `}<inlineCode parentName=\"p\">{`stage`}</inlineCode>{` Workspace and click `}<strong parentName=\"p\">{`Enter`}</strong>{`. Type `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` and press the `}<strong parentName=\"p\">{`Enter`}</strong>{` key to automatically select this Workspace in the future. You can `}<a parentName=\"p\" {...{\n            \"href\": \"create-mesh.md#select-a-project-or-workspace\"\n          }}>{`select another workspace`}</a>{` at any time.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Type `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` and click the `}<strong parentName=\"p\">{`Enter`}</strong>{` key to confirm the creation of the mesh. The mesh configuration and corresponding details will display.`}</p>\n        <p parentName=\"li\">{`It can take a few minutes for new meshes to propagate. If you want to check the build progress, run the `}<inlineCode parentName=\"p\">{`aio api-mesh:status`}</inlineCode>{` command. After your mesh is successfully built, proceed to the next section.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"access-the-mesh\"\n    }}>{`Access the Mesh`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the `}<a parentName=\"p\" {...{\n            \"href\": \"command-reference.md#aio-api-meshdescribe\"\n          }}><inlineCode parentName=\"a\">{`aio api-mesh:describe`}</inlineCode></a>{` command and copy the URL for your mesh.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Paste the URL into a GraphQL client, such as `}<a parentName=\"p\" {...{\n            \"href\": \"https://altairgraphql.dev\"\n          }}>{`Altair`}</a>{`, `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/graphql/graphiql\"\n          }}>{`GraphiQL`}</a>{`, or `}<a parentName=\"p\" {...{\n            \"href\": \"https://insomnia.rest/download\"\n          }}>{`Insomnia`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Determine if you can view the schema in the `}<strong parentName=\"p\">{`Docs`}</strong>{` section of your GraphQL client. Refer to your GraphQL client's documentation to learn how to access the schema.`}</p>\n        <p parentName=\"li\">{`If you can view the schema, proceed to the next section. If you cannot view the schema, try the following:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Check your mesh's sources. If you need to modify your mesh, use the `}<a parentName=\"p\" {...{\n                \"href\": \"command-reference.md#aio-api-meshupdate\"\n              }}><inlineCode parentName=\"a\">{`aio api-mesh:update`}</inlineCode></a>{` command to update your mesh with the correct information.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Open a web browser and determine if you have access to the Adobe Commerce sample storefront: `}<a parentName=\"p\" {...{\n                \"href\": \"https://venia.magento.com\"\n              }}>{`https://venia.magento.com`}</a>{`.`}</p>\n          </li>\n        </ul>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"run-a-query\"\n    }}>{`Run a query`}</h2>\n    <p>{`In your GraphQL client, run the following GraphQL queries:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  storeConfig {\n    store_code\n    store_name\n    base_currency_code\n  }\n  GetV1DirectoryCountries {\n    ... on directory_data_country_information_interface {\n      id\n      two_letter_abbreviation\n  }\n }\n}\n`}</code></pre>\n    <p>{`These queries demonstrate how you can return data from multiple sources within your mesh with a single request.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/graphql/schema/store/queries/store-config/\"\n      }}><inlineCode parentName=\"a\">{`storeConfig`}</inlineCode></a>{` query returns information from the `}<inlineCode parentName=\"p\">{`GraphQL`}</inlineCode>{` handler, while the `}<a parentName=\"p\" {...{\n        \"href\": \"https://adobe-commerce.redoc.ly/2.4.5-admin/tag/directorycountries#operation/GetV1DirectoryCountries\"\n      }}>{`GetV1DirectoryCountries`}</a>{` query returns information from the `}<inlineCode parentName=\"p\">{`REST`}</inlineCode>{`  handler.`}</p>\n    <h2 {...{\n      \"id\": \"add-a-transform\"\n    }}>{`Add a transform`}</h2>\n    <p>{`Now we will apply the `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{` transform to prevent conflicting field names between sources. In the following example, we will add `}<inlineCode parentName=\"p\">{`REST_`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`GraphQL_`}</inlineCode>{` prefixes to help us distinguish between our two handlers.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Modify your `}<inlineCode parentName=\"p\">{`mesh.json`}</inlineCode>{` file to match the following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"CommerceREST\",\n        \"handler\": {\n          \"openapi\": {\n            \"source\": \"https://venia.magento.com/rest/all/schema?services=all\"\n          }\n        },\n        \"transforms\": [\n          {\n            \"prefix\": {\n              \"value\": \"REST_\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"CommerceCoreGraph\",\n        \"handler\": {\n          \"graphql\": {\n            \"endpoint\": \"https://venia.magento.com/graphql\"\n          }\n        },\n        \"transforms\": [\n          {\n            \"prefix\": {\n              \"value\": \"GraphQL_\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n`}</code></pre>\n        <p parentName=\"li\">{`These `}<inlineCode parentName=\"p\">{`transforms`}</inlineCode>{` apply a `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{` to both sources, which will modify field names in the schema to begin with either `}<inlineCode parentName=\"p\">{`REST_`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`GraphQL_`}</inlineCode>{`, depending on which source they are from.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update your mesh by using the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`aio api-mesh:update mesh.json\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After you have successfully updated, return to your GraphQL client and open the schema. Search for \"GraphQL\" or \"REST\" to see if the `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{` transform was successful. It can take a few minutes for updated meshes to propagate. You can check the status of your mesh by running the `}<inlineCode parentName=\"p\">{`aio api-mesh:status`}</inlineCode>{` command.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following query, which adds both the `}<inlineCode parentName=\"p\">{`REST_`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`GraphQL_`}</inlineCode>{` prefixes.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-graphql\"\n          }}>{`{\n  storeConfig {\n    ... on GraphQL_StoreConfig {\n      store_code\n      store_name\n      base_currency_code\n    }\n  }\n  GetV1DirectoryCountries {\n    ... on REST_directory_data_country_information_interface {\n      id\n      two_letter_abbreviation\n    }\n  }\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"add-a-source\"\n    }}>{`Add a source`}</h2>\n    <p>{`You can use the `}<a parentName=\"p\" {...{\n        \"href\": \"command-reference.md#aio-api-meshsourceinstall\"\n      }}>{`source commands`}</a>{` to install preconfigured first and third-party sources. You can find available sources by running the `}<inlineCode parentName=\"p\">{`aio api-mesh:source:discover`}</inlineCode>{` command or visiting the Adobe `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/api-mesh-sources\"\n      }}>{`api-mesh-sources`}</a>{` repo.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following source command. The response might ask you to reselect your Workspace and Project.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`aio api-mesh:source:install CommerceCatalogServiceGraph\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When you are prompted to enter an API Key, enter a placeholder value like `}<inlineCode parentName=\"p\">{`1234567890`}</inlineCode>{` and press the `}<strong parentName=\"p\">{`Enter`}</strong>{` key.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After you have successfully added the source, run the following command to view your updated mesh configuration.`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio api-mesh:get\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}