{"version":3,"file":"component---src-pages-gateway-template-md-b5cb7895cc66321fd48e.js","mappings":"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","sources":["webpack://graphql-mesh-gateway/./src/pages/gateway/template.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"create-a-mesh-from-a-template\"\n    }}>{`Create a mesh from a template`}</h1>\n    <p>{`API Mesh for Adobe Developer App Builder provides a straightforward way to `}<a parentName=\"p\" {...{\n        \"href\": \"create-mesh.md\"\n      }}>{`create a mesh`}</a>{`. Alternatively, you can create a mesh from a template, which avoids most of the installation and setup steps required for a traditionally created mesh.`}</p>\n    <h2 {...{\n      \"id\": \"clone-the-repository\"\n    }}>{`Clone the repository`}</h2>\n    <p>{`From the API Mesh template repository page, click the `}<strong parentName=\"p\">{`Use this template`}</strong>{` button to create a new repository based on the template.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-project-and-workspace\"\n    }}>{`Create a project and workspace`}</h2>\n    <p>{`In the Adobe Developer Console, create a project and workspace and add the API Mesh API to it. `}<a parentName=\"p\" {...{\n        \"href\": \"./work-with-mesh.md#projects-and-workspaces\"\n      }}>{`Create your project and workspace`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"configure-secrets\"\n    }}>{`Configure secrets`}</h2>\n    <p>{`In the Developer Console, click the `}<strong parentName=\"p\">{`Download`}</strong>{` button in the top-right corner of the Project Overview page.`}</p>\n    <p>{`In your cloned repository, `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.github.com/en/actions/learn-github-actions/variables#creating-configuration-variables-for-a-repository\"\n      }}>{`add the following configuration variables`}</a>{` from the JSON file.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Variable name in GitHub`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name defined in downloaded JSON`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CLIENTID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`client_id`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CLIENTSECRET`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`client_secret`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TECHNICALACCOUNTID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`technical_account_email`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TECHNICALACCOUNTEMAIL`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`technical_account_id`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IMSORGID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ims_org_id`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ORGID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`project`}</inlineCode>{` > `}<inlineCode parentName=\"td\">{`org`}</inlineCode>{` > `}<inlineCode parentName=\"td\">{`id`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`PROJECTID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`project`}</inlineCode>{` > `}<inlineCode parentName=\"td\">{`id`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`WORKSPACEID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`project`}</inlineCode>{` > `}<inlineCode parentName=\"td\">{`workspace`}</inlineCode>{` > `}<inlineCode parentName=\"td\">{`id`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"test-your-mesh-in-the-github-codespace\"\n    }}>{`Test your mesh in the GitHub Codespace`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`When working with codespaces, make sure to follow Github's `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.github.com/en/codespaces/reference/security-in-github-codespaces\"\n      }}>{`security best practices`}</a>{`.`}</p>\n    <p>{`After configuring your variables, click the `}<strong parentName=\"p\">{`Code`}</strong>{` dropdown in your repository and select the `}<strong parentName=\"p\">{`Codespaces`}</strong>{` tab. Click `}<strong parentName=\"p\">{`Create Codespace`}</strong>{`. The codespace will automatically set up the environment for you.`}</p>\n    <p>{`Once your codespace loads, and the `}<inlineCode parentName=\"p\">{`yarn start`}</inlineCode>{` command completes, click the `}<strong parentName=\"p\">{`Ports`}</strong>{` tab in the bottom panel. Since portforwarding is automatically enabled, you can query the mesh over the internet. Click the link in the `}<strong parentName=\"p\">{`Forwarded Address`}</strong>{` column. This page should give you a `}<inlineCode parentName=\"p\">{`404`}</inlineCode>{` error. You need to add `}<inlineCode parentName=\"p\">{`/graphql`}</inlineCode>{` to the URL to access the GraphQL playground. Your link should look like the following:`}</p>\n    <p><inlineCode parentName=\"p\">{`https://name-for-site-123456abc-5000.app.github.dev/graphql`}</inlineCode></p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>\nDo not use this URL for production purposes. Instead, use the endpoint provided when [publishing](#modify-and-publish-your-mesh).\n      <p>{`This URL is accessible over the internet based on the permissions of your repository and whether the server is running or not. For example, if your repository is private, users will need to log in to access the URL. If your repository is public, users can access the URL without logging in.`}</p>\n    </p>\n    <p>{`Now test the following simple query by adding it to the query window and clicking the `}<strong parentName=\"p\">{`Play`}</strong>{` (Execute Query) button:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  storeConfig {\n    store_code\n  }\n}\n`}</code></pre>\n    <p>{`You should receive a response from the Adobe Commerce API configured in your `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file (by default this is `}<a parentName=\"p\" {...{\n        \"href\": \"https://venia.magento.com\"\n      }}>{`Venia`}</a>{`, Commerce's reference storefront):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"storeConfig\": {\n      \"store_code\": \"default\"\n    }\n  },\n  \"extensions\": {}\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"modify-and-publish-your-mesh\"\n    }}>{`Modify and publish your mesh`}</h2>\n    <p>{`Either modify your `}<inlineCode parentName=\"p\">{`mesh.json`}</inlineCode>{` file or the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to add or replace your Commerce source. Alternatively, you can replace your mesh configuration file with a mesh from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/adobe-commerce-samples/tree/main/api-mesh\"\n      }}>{`code samples repository`}</a>{`.`}</p>\n    <p>{`Then use the `}<strong parentName=\"p\">{`Source Control`}</strong>{` tab in your Codespace to commit your changes. Once you commit your changes, the GitHub Actions will automatically update the deployed mesh.`}</p>\n    <p>{`After you publish your mesh, you can access it using the URL provided listed in the `}<strong parentName=\"p\">{`Describe`}</strong>{` section of the `}<strong parentName=\"p\">{`Deploy Mesh`}</strong>{` step in the GitHub Actions output.`}</p>\n    <h2 {...{\n      \"id\": \"files-in-the-template-repository\"\n    }}>{`Files in the template repository`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mesh.json`}</inlineCode>{` - The mesh configuration file, which contains a sample mesh with a single source.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.env`}</inlineCode>{` - The environment file that contains variables for the mesh configuration file.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package.json`}</inlineCode>{` - The dependencies and scripts to test and deploy your mesh.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.vscode/launch.json`}</inlineCode>{` - A VS Code configuration to allow debugging in VS Code or in GitHub Codespaces.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.devcontainer/devcontainer.json`}</inlineCode>{` - Codespace's configuration for the development. This configuration helps set up packages and build the mesh automatically. It also configures port-forwarding, so you can use any GraphQL interface to interact with the mesh.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.github/workflows/deployMesh.yml`}</inlineCode>{` - A GitHub workflow to automatically publish the mesh config whenever you commit a change to the `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{` branch.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}