{"version":3,"file":"component---src-pages-mesh-advanced-logging-md-bbd0178b6319ff81de63.js","mappings":"oSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,WACH,YACL,kBAAK,sIAAoI,cAAGC,WAAW,IACnJ,KAAQ,4BACL,kBAAsB,sCAAoC,cAAGA,WAAW,IAC3E,KAAQ,kCACL,wBAA4B,6BAA2B,cAAGA,WAAW,IACxE,KAAQ,qBACL,uBAA2B,gCAClC,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,SAAO,cAAGC,WAAW,IACtB,KAAQ,iDACL,eAAmB,sBAC1B,eACE,GAAM,2BACH,4BACL,kBAAK,0GACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,8BAEP,kBAAK,8CACL,kBAAK,gJAA8I,uBAAYA,WAAW,KAAM,wBAAqC,kDACrN,kBAAK,6BAA2B,cAAGA,WAAW,IAC1C,KAAQ,oCACP,uBAAYA,WAAW,KAAM,0BAA0C,MAC5E,eACE,GAAM,iCACH,kCACL,kBAAK,6CAA2C,cAAGA,WAAW,IAC1D,KAAQ,6BACP,uBAAYA,WAAW,KAAM,0BAA0C,2FAC5E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,6CAEP,kBAAK,6BAA2B,cAAGA,WAAW,IAC1C,KAAQ,mCACP,uBAAYA,WAAW,KAAM,yBAAyC,MAC3E,eACE,GAAM,oBACH,qBACL,kBAAK,iJAA+I,uBAAYA,WAAW,KAAM,aAA0B,SAAO,uBAAYA,WAAW,KAAM,WAAwB,oBACvQ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,0HAEP,kBAAK,uBAAqB,uBAAYA,WAAW,KAAM,wBAAqC,+CAC5F,kBAAK,6BAA2B,cAAGA,WAAW,IAC1C,KAAQ,wCACP,uBAAYA,WAAW,KAAM,8BAA8C,KAGnF,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://graphql-mesh-gateway/./src/pages/mesh/advanced/logging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"logging\"\n    }}>{`Logging`}</h1>\n    <p>{`API Mesh for Adobe Developer App Builder allows you to use logs to monitor and debug issues with your mesh and its sources. After `}<a parentName=\"p\" {...{\n        \"href\": \"#display-recent-requests\"\n      }}>{`getting a list`}</a>{` of recent logs by rayID, you can `}<a parentName=\"p\" {...{\n        \"href\": \"#display-a-single-log-by-rayid\"\n      }}>{`look up a recent log`}</a>{`. Alternatively, you can `}<a parentName=\"p\" {...{\n        \"href\": \"#export-bulk-logs\"\n      }}>{`export logs in bulk`}</a>{` for a specific time range.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Only `}<a parentName=\"p\" {...{\n        \"href\": \"../basic/create-mesh.md#access-your-mesh-urls\"\n      }}>{`edge meshes`}</a>{` support logging.`}</p>\n    <h2 {...{\n      \"id\": \"display-recent-requests\"\n    }}>{`Display recent requests`}</h2>\n    <p>{`The following command displays the 15 most recent requests by rayID and the status of those requests:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio api-mesh:log-list \n`}</code></pre>\n    <p>{`By default, the requests display in YAML.`}</p>\n    <p>{`The rayID is a unique identifier that is associated with every request made through an edge mesh. After finding the relevant rayID, use the `}<inlineCode parentName=\"p\">{`aio api-mesh:log-get`}</inlineCode>{` command to retrieve the logs for that rayID.`}</p>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#aio-api-meshlog-list\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:log-list`}</inlineCode></a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"display-a-single-log-by-rayid\"\n    }}>{`Display a single log by rayID`}</h2>\n    <p>{`After finding the desired rayID with the `}<a parentName=\"p\" {...{\n        \"href\": \"#display-recent-requests\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:log-list`}</inlineCode></a>{` command, you can use the following command to retrieve the logs for a specific rayID:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio api-mesh:log-get 1a123456789abcd0\n`}</code></pre>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#aio-api-meshlog-get\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:log-get`}</inlineCode></a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"export-bulk-logs\"\n    }}>{`Export bulk logs`}</h2>\n    <p>{`Use the following command to create a CSV file with logs for the selected mesh during the specified time range. The maximum time between the `}<inlineCode parentName=\"p\">{`startTime`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`endTime`}</inlineCode>{` is 30 minutes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio api-mesh:log-get-bulk --startTime 2024-08-27T21:31:39Z --endTime 2024-08-27T21:55:54Z --filename mesh_logs.csv\n`}</code></pre>\n    <p>{`The time format is `}<inlineCode parentName=\"p\">{`YYYY-MM-DDTHH:MM:SSZ`}</inlineCode>{`. You must convert your local time to UTC.`}</p>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#aio-api-meshlog-get-bulk\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:log-get-bulk`}</inlineCode></a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}