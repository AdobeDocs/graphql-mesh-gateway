"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[5988],{44127:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return s},default:function(){return u}});var t=a(87462),o=a(45987),i=(a(35776),a(3905)),r=a(91515);const l=["components"],s={},d=(m="InlineAlert",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var m;const p={_frontmatter:s},c=r.Z;function u(e){let{components:n}=e,a=(0,o.Z)(e,l);return(0,i.mdx)(c,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"openapi-handlers"},(0,i.mdx)("inlineCode",{parentName:"h1"},"openapi")," handlers"),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"openapi")," handler allows you to connect to an OpenAPI-compliant REST service endpoint or static Swagger schema using a ",(0,i.mdx)("inlineCode",{parentName:"p"},".json")," or ",(0,i.mdx)("inlineCode",{parentName:"p"},".yaml")," file."),(0,i.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"When using a Swagger schema, API Mesh can only access ",(0,i.mdx)("inlineCode",{parentName:"p"},"application/json")," content from the Swagger API definition."),(0,i.mdx)(d,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"API Mesh does not accept a wildcard (",(0,i.mdx)("inlineCode",{parentName:"p"},"*/*"),") as a content type."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "CommerceREST",\n        "handler": {\n          "openapi": {\n            "source": "https://venia.magento.com/rest/"\n          }\n        },\n      }\n    ]\n  },\n}\n')),(0,i.mdx)("p",null,"To import a remote or local schema using ",(0,i.mdx)("inlineCode",{parentName:"p"},".json")," or ",(0,i.mdx)("inlineCode",{parentName:"p"},".yaml"),", use a local source, see ",(0,i.mdx)("a",{parentName:"p",href:"../../gateway/./handlers/index.md#reference-local-files-in-handlers"},"Reference local file handlers")," for more information."),(0,i.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"If your source handler's schema is modified, you must ",(0,i.mdx)("a",{parentName:"p",href:"../../gateway/create-mesh.md#update-an-existing-mesh"},"update your mesh")," to allow API Mesh to cache any changes."),(0,i.mdx)("h2",{id:"naming-conventions"},"Naming conventions"),(0,i.mdx)("p",null,"The OpenAPI handler uses the following naming conventions:"),(0,i.mdx)("h3",{id:"type-naming"},"Type naming"),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"operationId")," is only modified when necessary according to the GraphQL spec:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"The following characters are replaced with an underscore (",(0,i.mdx)("inlineCode",{parentName:"li"},"_"),"): white space, ",(0,i.mdx)("inlineCode",{parentName:"li"},"."),", ",(0,i.mdx)("inlineCode",{parentName:"li"},"/"),", ",(0,i.mdx)("inlineCode",{parentName:"li"},":")," and ",(0,i.mdx)("inlineCode",{parentName:"li"},"-"),"."),(0,i.mdx)("li",{parentName:"ul"},"Characters that are not digits or Latin alphabet letters are replaced with their character codes."),(0,i.mdx)("li",{parentName:"ul"},"If the first character of a name is a digit, it is prefixed with an underscore (",(0,i.mdx)("inlineCode",{parentName:"li"},"_"),"), because GraphQL does not allow initial digits.")),(0,i.mdx)("h3",{id:"unnamed-types"},"Unnamed types"),(0,i.mdx)("p",null,"Unnamed types use path-based naming. This means a type in your schema could be structured like ",(0,i.mdx)("inlineCode",{parentName:"p"},"query_getUsers_items_firstName"),"."),(0,i.mdx)("h2",{id:"headers-from-context"},"Headers from context"),(0,i.mdx)("p",null,"The following example demonstrates how to include authentication headers in the context of your mesh."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'...\n      "handler": {\n        "openapi": {\n          "source": "./my-schema.json",\n          "operationHeaders": {\n            "Authorization": "Bearer {context.headers[\'x-my-api-token\']}"\n          }\n        }\n      }\n...\n')),(0,i.mdx)("h2",{id:"advanced-cookie-handling"},"Advanced cookie handling"),(0,i.mdx)("p",null,"When building a web application cookies are often used for secure authentication. Conversely, mobile applications tend to use an HTTP header."),(0,i.mdx)("h3",{id:"setting-and-unsetting-cookies"},"Setting and unsetting cookies"),(0,i.mdx)("p",null,"To set the cookie for the web application, we need to access the HTTP response that is sent back to the client by using ",(0,i.mdx)("inlineCode",{parentName:"p"},"additionalResolvers"),". To do this, we need to create two new resolvers, one for login and one for logout."),(0,i.mdx)("p",null,"The first step is to edit the ",(0,i.mdx)("inlineCode",{parentName:"p"},"mesh.json")," file, and add the following at the end:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "additionalTypeDefs": "extend type Mutation {\\n  login(credentials: Credentials!): String\\n  logout: Boolean\\n}\\n",\n  "additionalResolvers": [\n    "./src/additional-resolvers.js"\n  ]\n}\n')),(0,i.mdx)("p",null,"Then manage the cookie in the new resolvers:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"// lifespan of our cookie\nconst oneYear = 365 * 24 * 3600\n\nconst resolvers = {\n  Mutation: {\n    async login(root, args, context, info) {\n      // Call the Rest API's login operation\n      const result = await context.Rest.Mutation.accountLogin({\n        root,\n        args: {\n          credentials: args.credentials\n        },\n        context,\n        info\n      })\n      // if `result` contains a JWT token, you could instead decode it and set `Expires`\n      // to the JWT token's expiration date\n      res.set('Set-Cookie', `accessToken=${result}; Path=/; Secure; HttpOnly; Max-Age=${oneYear};`)\n\n      return result\n    },\n    logout(root, args, { res }) {\n      // use old date to unset cookie\n      res.set('Set-Cookie', `accessToken=logout; Path=/; Secure; HttpOnly; Expires=Thu, 1 Jan 1970 00:00:00 GMT;`)\n\n      return true\n    },\n  },\n}\n\nmodule.exports = { resolvers }\n")),(0,i.mdx)("h2",{id:"callbacks-as-subscriptions"},"Callbacks as Subscriptions"),(0,i.mdx)("p",null,"The OpenAPI handler can process OpenAPI Spec Callbacks as GraphQL Subscriptions, by using your Publish-subscribe pattern PubSub implementation to consume the data. However, you need to define webhooks for callbacks individually."),(0,i.mdx)("h2",{id:"loading-source-from-a-cdn"},"Loading source from a CDN"),(0,i.mdx)("p",null,"API Mesh supports loading sources from a CDN or schema registry by using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"source")," property."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyApi",\n      "handler": {\n        "openapi": {\n          "source": "https://cdn.<your cdn>.graphql",\n          "schemaHeaders": {\n            "X-CDN-Key": "abc123+d4/5e="\n          }\n        }\n      }\n    }\n  ]\n}\n')),(0,i.mdx)("h2",{id:"config-api-reference"},"Config API reference"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"source")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"Any"),", required) - Reference to your API source, such as a local file, a remote file, or a URL endpoint"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"sourceFormat")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"String (json | yaml)"),") - Format of the source file"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"schemaHeaders")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object for adding headers to API calls for runtime schema introspection",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"If you are using a remote URL endpoint, you can set headers for the HTTP request to fetch your schema."))),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"operationHeaders")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object for adding headers to API calls for runtime operation execution"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"baseUrl")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"String"),") - URL that all paths are based on",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"The ",(0,i.mdx)("inlineCode",{parentName:"li"},"baseURL")," overrides the server object in the OpenAPI Spec."))),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"qs")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object for the query search parameters to add to the API call"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"includeHttpDetails")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"Boolean"),") - Flag for including HTTP Response details in the result object")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-gateway-handlers-openapi-md-fd64c8e7ad070f5f3e74.js.map