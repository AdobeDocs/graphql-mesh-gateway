"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[3428],{13464:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return r},default:function(){return x}});var i,l=a(87462),m=a(63366),d=(a(15007),a(64983)),t=a(91515),o=["components"],r={},p=(i="InlineAlert",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,d.mdx)("div",e)}),s={_frontmatter:r},C=t.Z;function x(e){var n=e.components,a=(0,m.Z)(e,o);return(0,d.mdx)(C,(0,l.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"naming-convention-transform"},(0,d.mdx)("inlineCode",{parentName:"h1"},"naming-convention")," transform"),(0,d.mdx)("p",null,"The ",(0,d.mdx)("inlineCode",{parentName:"p"},"naming-convention")," transforms allow you to apply casing and other conventions to your response."),(0,d.mdx)("h2",{id:"usage"},"Usage"),(0,d.mdx)("p",null,"The following example converts all of your ",(0,d.mdx)("inlineCode",{parentName:"p"},"fieldNames")," to lower case in the Adobe Commerce source:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-JSON"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "AdobeCommerce",\n        "transforms": [\n          {\n            "namingConvention": {\n              "fieldNames": "lowerCase"\n            }\n          }\n        ],\n        "handler": {\n          "graphql": {\n            "endpoint": "https://venia.magento.com/graphql"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,d.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,d.mdx)("p",null,"For information about ",(0,d.mdx)("inlineCode",{parentName:"p"},"bare")," and ",(0,d.mdx)("inlineCode",{parentName:"p"},"wrap")," modes, please read the ",(0,d.mdx)("a",{parentName:"p",href:"index.md#two-different-modes"},"dedicated section")),(0,d.mdx)("h2",{id:"config-api-reference"},"Config API Reference"),(0,d.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,d.mdx)("p",null,"The following case options should not be used because they violate the ",(0,d.mdx)("a",{href:"https://spec.graphql.org/October2021/#sec-Names)"},"GraphQL spec"),". These options will likely be deprecated in the future.",(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"capitalCase")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"dotCase")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"headerCase")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"noCase")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"paramCase")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"pathCase")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"sentenceCase")))),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"mode")," (type: String (",(0,d.mdx)("inlineCode",{parentName:"li"},"bare")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"wrap"),")) - Specify to apply naming-convention transforms to bare schema or by wrapping original schema"),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"typeNames")," (type: String (",(0,d.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"fieldNames")," (type: String (",(0,d.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"enumValues")," (type: String (",(0,d.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"fieldArgumentNames")," (type: String (",(0,d.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,d.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-reference-transforms-naming-convention-md-e22f0a4381ac185f3be0.js.map