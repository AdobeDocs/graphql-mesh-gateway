"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[9151],{20281:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return d},default:function(){return c}});var o=a(58168),r=a(80045),t=(a(88763),a(15680)),l=a(83407);const i=["components"],d={},m=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,t.mdx)("div",e)});var p;const s={_frontmatter:d},h=l.A;function c(e){let{components:n}=e,a=(0,r.A)(e,i);return(0,t.mdx)(h,(0,o.A)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"graphql-handlers"},(0,t.mdx)("inlineCode",{parentName:"h1"},"graphql")," handlers"),(0,t.mdx)("p",null,"The ",(0,t.mdx)("inlineCode",{parentName:"p"},"graphql")," handler allows you to connect to a GraphQL endpoint."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "PWA",\n        "handler": {\n          "graphql": {\n            "endpoint": "your_Venia_url"\n          }\n        }\n      },\n      {\n        "name": "AEM",\n        "handler": {\n          "graphql": {\n            "endpoint": "<your_AEM_url>"\n          }\n        }\n      }\n    ]\n  },\n}\n')),(0,t.mdx)("p",null,"This handler allows you to load remote GraphQL schemas as part of your mesh. The GraphQL handler uses the following format:"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyGraphQLApi",\n      "handler": {\n        "graphql": {\n          "endpoint": "https://my-service-url/graphql"\n        }\n      }\n    }\n  ]\n}\n')),(0,t.mdx)("p",null,"GraphQL handlers can also use local sources, see ",(0,t.mdx)("a",{parentName:"p",href:"./index.md#reference-local-files-in-handlers"},"Reference local file handlers")," for more information."),(0,t.mdx)("h2",{id:"headers-from-context"},"Headers from context"),(0,t.mdx)("p",null,"The following example shows how to pass authorization headers to a GraphQL endpoint."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyGraphQLApi",\n      "handler": {\n        "graphql": {\n          "endpoint": "https://your-service/graphql",\n          "operationHeaders": {\n            "Authorization": "Bearer {context.headers[\'x-my-api-token\']}"\n          // Do not use capital letters in header names.\n          }\n        }\n      }\n    }\n  ]\n}\n')),(0,t.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,t.mdx)("p",null,"Header names are automatically converted to lowercase."),(0,t.mdx)("h2",{id:"provide-an-introspection-file"},"Provide an introspection file"),(0,t.mdx)("p",null,"If introspection is disabled in the production environment of your GraphQL source, and you want to provide your schema definition or introspection separately, you can use the ",(0,t.mdx)("inlineCode",{parentName:"p"},"source")," field to provide an online or local introspection file:"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "test_automation",\n        "handler": {\n          "graphql": {\n            "endpoint": "https://venia.magento.com/graphql",\n            "source": "https://<domain>/myFile.graphql"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "Adobe_Commerce",\n        "handler": {\n          "graphql": {\n            "endpoint": "https://venia.magento.com/graphql",\n            "source": "schema.graphql"\n          }\n        }\n      }\n    ],\n    "files": [\n      {\n        "path": "schema.graphql",\n        "content": "type Query {hello: String}"\n      }\n    ]\n  }\n}\n')),(0,t.mdx)("h2",{id:"local-schemas"},"Local Schemas"),(0,t.mdx)("p",null,"We recommend providing a local schema by using the ",(0,t.mdx)("a",{parentName:"p",href:"../../advanced/extend/index.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"additionalTypeDefs"))," and ",(0,t.mdx)("a",{parentName:"p",href:"../../advanced/extend/resolvers/programmatic-resolvers.md#additional-resolversjs"},(0,t.mdx)("inlineCode",{parentName:"a"},"additionalResolvers"))," configuration options."),(0,t.mdx)("h2",{id:"config-api-reference"},"Config API reference"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"endpoint")," (type: ",(0,t.mdx)("inlineCode",{parentName:"li"},"String"),", required) - URL or file path for your remote GraphQL endpoint",(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},"Local file types must be ",(0,t.mdx)("inlineCode",{parentName:"li"},".js")," or ",(0,t.mdx)("inlineCode",{parentName:"li"},".ts"),"."))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"source")," (type: ",(0,t.mdx)("inlineCode",{parentName:"li"},"String"),") - Path to the introspection file"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"schemaHeaders")," (type: ",(0,t.mdx)("inlineCode",{parentName:"li"},"Any"),") - JSON object for adding headers to API calls for runtime schema introspection"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"operationHeaders")," (type: ",(0,t.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object for adding headers to API calls for runtime operation execution"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"useGETForQueries")," (type: ",(0,t.mdx)("inlineCode",{parentName:"li"},"Boolean"),") - An HTTP GET method for query operations"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"method")," (type: ",(0,t.mdx)("inlineCode",{parentName:"li"},"String (GET | POST)"),") - An HTTP method for GraphQL operations")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-mesh-basic-handlers-graphql-md-9bc0fb1a4944ae79e244.js.map