{"version":3,"file":"component---src-pages-mesh-advanced-developer-tools-md-ecd434ddfe78bc4db5fe.js","mappings":"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","sources":["webpack://graphql-mesh-gateway/./src/pages/mesh/advanced/developer-tools.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"local-development\"\n    }}>{`Local development`}</h1>\n    <p>{`The processes covered in this topic allow developers to set up a local environment, use environment variables, and directly reference files in API Mesh for Adobe Developer App Builder.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-local-environment\"\n    }}>{`Create a local environment`}</h2>\n    <p>{`A local development environment for API Mesh allows you to run a local version for development and testing purposes.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshinit\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:init`}</inlineCode>{` command`}</a>{` allows you to build a local development environment at the specified location.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`All of these steps can be automated using flags described in the `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshinit\"\n      }}>{`command reference`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following command.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`aio api-mesh:init <project-name>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select the directory to install the dev environment in.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Indicate if you want this environment to be a `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` project. (Requires `}<a parentName=\"p\" {...{\n            \"href\": \"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git\"\n          }}>{`git`}</a>{`.) Git is required for `}<a parentName=\"p\" {...{\n            \"href\": \"../best-practices/cicd.md\"\n          }}>{`CI/CD`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Specify whether you want to use Node Package Manager (`}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`) or `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`. (Requires `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm\"\n          }}><inlineCode parentName=\"a\">{`npm`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n            \"href\": \"https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable\"\n          }}><inlineCode parentName=\"a\">{`yarn`}</inlineCode></a>{`.)`}</p>\n        <p parentName=\"li\">{`The console indicates that the local environment installed successfully.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To deploy your mesh locally, use the `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` command. The port defaults to `}<inlineCode parentName=\"p\">{`5000`}</inlineCode>{`. You can specify a different port by using the `}<inlineCode parentName=\"p\">{`--port`}</inlineCode>{` flag or by adding your desired port number to the `}<a parentName=\"p\" {...{\n            \"href\": \"#environment-variables\"\n          }}><inlineCode parentName=\"a\">{`.env`}</inlineCode>{` file`}</a>{`, for example, `}<inlineCode parentName=\"p\">{`PORT=9000`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-terminal\"\n          }}>{`aio api-mesh run mesh.json --port 9000\n`}</code></pre>\n        <p parentName=\"li\">{`The console indicates your server status. If your build is successful, your mesh will be accessible at `}<inlineCode parentName=\"p\">{`http://localhost:5000/graphql`}</inlineCode>{` by default.`}</p>\n        <p parentName=\"li\">{`Use the `}<inlineCode parentName=\"p\">{`--select`}</inlineCode>{` argument with the `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` command to deploy the mesh artifact in the selected workspace without rebuilding it.`}</p>\n      </li>\n    </ol>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` command is currently in beta.`}</p>\n    <h2 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment variables`}</h2>\n    <p>{`Environment variables allow developers to make changes to a single variable, with one or more occurrences, across multiple meshes. An `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file will be created automatically when running the `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshinit\"\n      }}><inlineCode parentName=\"a\">{`init`}</inlineCode>{` command`}</a>{`.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshcreate\"\n      }}><inlineCode parentName=\"a\">{`create`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshupdate\"\n      }}><inlineCode parentName=\"a\">{`update`}</inlineCode></a>{` commands support the use of an `}<inlineCode parentName=\"p\">{`--env`}</inlineCode>{` flag, which allows you to provide an environment variables file location. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio api-mesh:create ../mesh.json --env .env_adhoc\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If your mesh contains environment variables, but you have not specified a variable file, the `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshcreate\"\n      }}><inlineCode parentName=\"a\">{`create`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshupdate\"\n      }}><inlineCode parentName=\"a\">{`update`}</inlineCode></a>{` commands look for your variables in a file named `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` in the current directory.`}</p>\n    <p>{`The variables in your `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file are inserted into your mesh when the mesh is created or updated. The following is an example of an `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`APIName='Adobe Commerce API'\ncommerceURL='<your_endpoint>'\nincludeHTTPDetailsValue=true\nPORT=9000\n`}</code></pre>\n    <p>{`The following mesh uses the preceding `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to populate the name and endpoint for the first source, as well as the state of the `}<inlineCode parentName=\"p\">{`includeHTTPDetails`}</inlineCode>{` flag.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"meshConfig\": {\n        \"sources\": [\n            {\n                \"name\": \"{{env.APIName}}\",\n                \"handler\": {\n                    \"graphql\": {\n                        \"endpoint\": \"{{env.commerceURL}}\"\n                    }\n                }\n            }\n        ],\n        \"responseConfig\":{\n            \"includeHTTPDetails\":{{env.includeHTTPDetailsValue}}\n        }\n    }\n}\n`}</code></pre>\n    <p>{`In the previous example, since `}<inlineCode parentName=\"p\">{`includeHTTPDetailsValue`}</inlineCode>{` expects a boolean value and not a string, the corresponding variable for that value `}<inlineCode parentName=\"p\">{`{{env.includeHTTPDetailsValue}}`}</inlineCode>{` is not enclosed in quotes. If you have strict settings in your IDE that prevent you from saving JSON similar to the previous example, you can instead save the mesh configuration file as a `}<inlineCode parentName=\"p\">{`.txt`}</inlineCode>{`.`}</p>\n    <p>{`After running the `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshcreate\"\n      }}><inlineCode parentName=\"a\">{`create`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshupdate\"\n      }}><inlineCode parentName=\"a\">{`update`}</inlineCode></a>{` command with the `}<inlineCode parentName=\"p\">{`--env`}</inlineCode>{` flag, the published mesh will look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"meshConfig\": {\n        \"sources\": [\n            {\n                \"name\": \"Adobe Commerce API\",\n                \"handler\": {\n                    \"graphql\": {\n                        \"endpoint\": \"<your_endpoint>\"\n                    }\n                }\n            }\n        ],\n        \"responseConfig\":{\n            \"includeHTTPDetails\":true\n        }\n    }\n}\n`}</code></pre>\n    <p>{`You can confirm that your variables were updated successfully by running the `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshget\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:get`}</inlineCode>{` command`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"reference-files-directly\"\n    }}>{`Reference files directly`}</h2>\n    <p>{`In addition to `}<a parentName=\"p\" {...{\n        \"href\": \"../basic/handlers/index.md#reference-local-files-in-handlers\"\n      }}>{`qualifying the `}<inlineCode parentName=\"a\">{`content`}</inlineCode>{` of a file manually`}</a>{`, you can directly reference a file in your mesh for automatic conversion. The following restrictions apply:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Only `}<inlineCode parentName=\"li\">{`JS`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`JSON`}</inlineCode>{` file formats are allowed.`}</li>\n      <li parentName=\"ul\">{`The referenced file's path must be less than 25 characters.`}</li>\n      <li parentName=\"ul\">{`The referenced file must be in the same directory as the mesh file that references it.`}</li>\n      <li parentName=\"ul\">{`The file cannot be in the `}<inlineCode parentName=\"li\">{`~`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`home`}</inlineCode>{` directory.`}</li>\n    </ul>\n    <p>{`The following example references the `}<inlineCode parentName=\"p\">{`requestParams.json`}</inlineCode>{` file. When this mesh is created or updated, the contents of that file are automatically minified, stringified, and added to the `}<inlineCode parentName=\"p\">{`files`}</inlineCode>{` array.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"<json_source_name>\",\n        \"handler\": {\n          \"JsonSchema\": {\n            \"baseUrl\": \"<json_source__baseurl>\",\n            \"operations\": [\n              {\n                \"type\": \"Query\",\n                \"field\": \"<query>\",\n                \"path\": \"<query_path>\",\n                \"method\": \"POST\",\n                \"requestSchema\": \"./requestParams.json\"\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <p>{`For example, if `}<inlineCode parentName=\"p\">{`requestParams.json`}</inlineCode>{` contained the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"$schema\": \"http://json-schema.org/draft-01/schema\",\n  \"type\": \"object\"\n}\n`}</code></pre>\n    <p>{`Then the mesh is updated to include the minified, stringified file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"<json_source_name>\",\n        \"handler\": {\n          \"JsonSchema\": {\n            \"baseUrl\": \"<json_source__baseurl>\",\n            \"operations\": [\n              {\n                \"type\": \"Query\",\n                \"field\": \"<query>\",\n                \"path\": \"<query_path>\",\n                \"method\": \"POST\",\n                \"responseSchema\": \"./schemaBody.json\"\n              }\n            ]\n          }\n        }\n      }\n    ],\n    \"files\": [\n      {\n        \"path\": \"./schemaBody.json\",\n        \"content\": \"{\\\\\"$schema\\\\\":\\\\\"http://json-schema.org/draft-01/schema\\\\\",\\\\\"type\\\\\":\\\\\"object\\\\\"}\"\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <p>{`You can confirm that your file was attached successfully by running the `}<a parentName=\"p\" {...{\n        \"href\": \"../advanced/index.md#aio-api-meshget\"\n      }}><inlineCode parentName=\"a\">{`aio api-mesh:get`}</inlineCode>{` command`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}