{"version":3,"file":"987e9e88-1a188026c557e3965c37.js","mappings":"siCAeA,MAAMA,EAAgB,wHAChBC,EAAsB,yCAA5B,80BAEA,MAAMC,EAAiB,IAA6C,IAAD,QAA3C,UAAEC,EAAF,eAAaC,EAAb,QAA6BC,GAAc,EAEjE,MAAM,EAACC,EAAD,EAAUC,IAAcC,EAAAA,EAAAA,WAAS,IACjC,EAACC,EAAD,EAAUC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACG,EAAD,EAAWC,IAAeJ,EAAAA,EAAAA,UAAS,CAAC,IACpC,EAACK,EAAD,EAAUC,IAAgBN,EAAAA,EAAAA,UAAS,KACnC,EAACO,EAAD,EAAiBC,IAAqBR,EAAAA,EAAAA,WAAS,IAC/C,EAACS,EAAD,EAAiBC,IAAqBV,EAAAA,EAAAA,WAAS,IAC/C,EAACW,EAAD,EAAYC,IAAgBZ,EAAAA,EAAAA,UAAS,KACrC,EAACa,EAAD,EAAWC,IAAed,EAAAA,EAAAA,UAAS,CAAC,IACpC,EAACe,GAAD,EAAYC,KAAgBhB,EAAAA,EAAAA,WAAS,IACrC,EAACiB,GAAD,EAAiBC,KAA0BlB,EAAAA,EAAAA,WAAS,IACpD,EAACmB,GAAD,EAAUC,KAAcpB,EAAAA,EAAAA,WAAS,IACjC,EAACqB,GAAD,EAAYC,KAAgBtB,EAAAA,EAAAA,WAAS,IACrC,EAACuB,GAAD,EAAqBC,KAAmBxB,EAAAA,EAAAA,WAAS,IACjD,EAACyB,GAAD,EAAeC,KAAwB1B,EAAAA,EAAAA,UAAS,CAAC,IACjD,EAAC2B,GAAD,EAAmBC,KAAuB5B,EAAAA,EAAAA,WAAS,IACnD,EAAC6B,GAAD,EAAUC,KAAc9B,EAAAA,EAAAA,UAAS,KAEjC,IAAE+B,KAAQC,EAAAA,EAAAA,YAAWC,EAAAA,IAErBC,GAAiBvC,aAAH,EAAGA,EAAYD,GAC7ByC,GAAcD,UAAH,UAAGA,GAAgBE,gBAAnB,aAAG,EAA0BC,QAAOC,GAAQC,OAAOC,KAAKF,EAAKG,OAAOC,MAAKC,GAAOA,EAAIC,WAAW,mBAqB1GC,GAAc,KAClB,MAAMC,EAAS,CAAC,EACVC,EAAc,CAAEC,MAAO,WAAYC,cAAe,IAExDf,UAAAA,GAAgBE,SAASc,SAAQ,IAAsB,IAArB,KAAEC,EAAF,MAAQV,GAAY,EACR,IAAD,EAAvCU,IAASC,GAATD,MAAsBV,GAAAA,EAAOL,WAC/BW,EAAYM,SAAWZ,EAAMY,WAAY,GACzC,EAAAN,EAAYE,eAAcK,KAA1B,gBAAkC,GAAGC,OAAOd,EAAML,UAAUoB,KAAI,QAAGf,OAAO,MAAEgB,EAAF,KAASC,IAAnB,QAAiC,CAAED,QAAOC,OAA1C,MAChE5C,GAAY6C,IAAQ,sBAAUA,GAAcC,MAAMC,QAAQpB,EAAML,UAAY,KAAO,CAAE0B,SAAQ,UAAErB,EAAML,gBAAR,iBAAE,EAAgBK,aAAlB,aAAE,EAAuBgB,OAAlG,KAEtBX,EAAOK,GAAP,OAAoBV,GAApB,IAA2BY,SAAUF,IAASY,IAAkBtB,aAA3B,EAA2BA,EAAOY,WAAvE,IAGEN,EAAYE,cAAce,SAC5BlB,EAAOgB,GAAYf,EACsB,IAArCA,EAAYE,cAAce,QAC5BlD,GAAY6C,IAAQ,sBAAUA,GAAV,IAAoBG,SAAQ,UAAEf,EAAYE,cAAc,UAA5B,aAAE,EAA8BQ,MAAOQ,OAAM,UAAElB,EAAYE,cAAc,UAA5B,aAAE,EAA8BS,MAAzG,KAIxB9C,EAAakC,GAvCkBoB,WAAa,IAAD,EAC3C,MAAMC,EAAO,UAAGC,oBAAH,aAAG,EAAcC,QAAQ,WAChCC,QAAgBC,EAAAA,EAAAA,IAAgB7C,IACtC,GAAgB,OAAZyC,EACsB,KAApBG,aAAA,EAAAA,EAASN,SACXpC,IAAoB,QAGnB,GAAI0C,EAAS,CAChB,MAAME,EAAUC,KAAKC,MAAMP,GAC3BvC,GAAuC,IAAnB4C,EAAQG,QAC5BjD,GAAqB8C,EACtB,CACIF,IACH5C,GAAqB,CAAC,GACtBlB,GAAkB,GACnB,EAwBDoE,EAA0B,GAI5BC,EAAAA,EAAAA,YAAU,KAAO,IAAD,EACd,UAAIC,OAAOC,gBAAX,OAAI,EAAiBC,iBACnBC,YAAW,KACTlF,GAAW,EAAX,GACA,KAGFA,GAAW,EACZ,GACA,WAAC+E,OAAOC,gBAAR,aAAC,EAAiBC,oBAErBH,EAAAA,EAAAA,YAAU,KACRI,YAAW,KACTzD,IAAgB,EAAhB,GACC,IAFH,GAGC,CAACD,MAEJsD,EAAAA,EAAAA,YAAU,KACJtE,GAAgBL,GAAW,EAAX,GACnB,CAACK,KAEJsE,EAAAA,EAAAA,YAAU,KACR,IAAKpE,GAAkBF,EAAgB,CACrC,MAAM2E,EAAU,KAAQrE,GACxB,IAAK,MAAM8B,KAAOuC,EAChBA,EAAWvC,GAAO,GAEpB7B,EAAYoE,GACZ5D,IAAa,EACd,IACA,CAACb,KAEJoE,EAAAA,EAAAA,YAAU,KAAQhC,IAAa,GAAK,KAEpCgC,EAAAA,EAAAA,YAAU,KAAO,IAAD,EACd,GAAKpD,GAKA,GAAIA,IAAsD,KAAtC,UAAAc,OAAOC,KAAKf,WAAZ,eAA2BuC,QAClDxD,GAAkB,GAClBN,GAAW,GACX+E,YAAW,KACTlF,GAAW,GACXG,GAAW,EAAX,GACC,SAEA,CAAC,IAAD,EACuC,KAAtC,UAAAqC,OAAOC,KAAKf,WAAZ,eAA2BuC,UAC7BtC,QAAqByD,GACrB3E,GAAkB,GAErB,MAjBCkB,QAAqByD,GACrB3E,GAAkB,GAClBT,GAAW,EAeZ,GACA,CAAC0B,MAEJoD,EAAAA,EAAAA,YAAU,KACR,GAAI5E,EAAS,CACX,MAAMiF,EAAU,KAAQrE,GACxB,IAAK,MAAM8B,KAAOuC,EAChBA,EAAWvC,GAAO,GAEpB7B,EAAYoE,EACb,IACA,CAACjF,KAEJ4E,EAAAA,EAAAA,YAAU,KAAO,IAAD,QACd,MAAMO,EAAc,UAAGxB,MAAMyB,MAAKnD,cAAA,EAAAA,GAAgBE,WAAY,IAAIC,QAAOiD,IAAK,aAAIA,SAAA,UAAAA,EAAO7C,aAAP,eAAcY,WAAYiC,EAAMnC,OAASY,CAA7C,WAA1D,aAAG,EAAqHP,KAAI8B,GAASA,EAAMnC,OACzJoC,EAAwB9F,EAAoB+F,KAAK3E,EAASkD,kBAAmB,UAAAlD,EAAQ,sBAAR,eAA4BmD,SAAU,EACnHyB,EAAuBL,EAAe/C,QAAQC,GAAuB,mBAAdA,EAAKoD,OAC5DC,EAAsB,UAAG9E,EAAQ,sBAAX,aAAG,EAA4B+E,MAAM,KAAKpC,KAAKlB,GAAS9C,EAAcgG,KAAKlD,EAAKuD,UACtGC,GAAwBL,IAAuBE,aAAA,EAAAA,EAAwBI,OAAOC,IAAoB,IAAVA,WAAkDb,IAA/BtE,EAAQ,gBAA2E,KAAvC,UAAAA,EAAQ,sBAAR,eAA4BmD,QAEnL7C,EAAUoE,GAAyBO,IAA4C,IAAnBjF,EAASoF,MAE3E7E,GAAWD,EAAX,GACC,CAACN,KAEJgE,EAAAA,EAAAA,YAAU,KACR,WACE,GAAI9C,IAAOA,GAAIiD,iBAAkB,CAC/B,MAAMkB,QAAgBnE,GAAIoE,aAC1BrE,GAAWoE,aAAD,EAACA,EAASE,MACrB,CAJH,OAMC,CAACrE,KAEJ,MAAMsE,GAAe,CAACC,EAAGnD,KACvB,MAAM6C,EAAkB,cAAT7C,GAAiC,UAATA,EAAoBmD,EAAEC,OAAOC,QAAUF,EAAEC,OAAOP,MAGvF,GAFAlF,GAAY6C,GAAQ,OAAUA,GAAV,IAAoB,CAACR,GAAO6C,MAEnC,aAAT7C,GAAuBtC,EAAQ,UAAe,CAAC,IAAD,EAChD,MAAM4F,EAAe9F,SAAH,UAAGA,EAAYmD,UAAf,aAAG,EAAuBb,cAAcyD,MAAKpE,GAAQA,EAAKmB,QAAU6C,EAAEC,OAAOP,QAC/FS,GAAgB3F,GAAY6C,GAAQ,OAAUA,GAAV,IAAoBM,OAAQwC,EAAa/C,QAC9E,GAoDGiD,GAAahG,aAAH,EAAGA,EAAYiG,GACzBC,GAAiBlG,aAAH,EAAGA,EAAYoD,GAC7B+C,GAAiBnG,aAAH,EAAGA,EAAYoG,GAC7BC,GAAYrG,aAAH,EAAGA,EAAYyC,GACxB6D,GAAWtG,aAAH,EAAGA,EAAYmD,GAE7B,OACE,iCACI7C,IAAkBV,IAAmBT,GAAW2B,KAChD,eACEyF,UAAWC,IAAWjF,cAAD,EAACA,GAAgBgF,WACtCE,IAAG,IAMH,eACEA,KAAKA,EAAAA,EAAAA,IAAF,+JAQ4BC,EAAAA,GAR5B,oBAQgEC,EAAAA,GARhE,iCAcFpF,cAAA,EAAAA,GAAgBuB,SAAS,cAAIyD,UAAU,4CAA4ChF,cAA1D,EAA0DA,GAAgBuB,QACnGvB,cAAA,EAAAA,GAAgBqF,aACf,aACEL,UAAU,sCACThF,cAFH,EAEGA,GAAgBqF,YAGrB,aACEL,UAAU,qCACVE,IAAG,GAFL,uCAI8D,eAAvB3F,cAAA,EAAAA,GAAc0B,MAAuB,2CAA4C,yBAAO,iBAAI1B,cAAJ,EAAIA,GAAciE,MAAzB,MAJxH,IAKG/D,KACC,kBACE6F,SAAS,IACTJ,IAAG,EAUHK,QAAS,IAAMzG,IAAa,IAZ9B,2BAkBN,eACEoG,KAAKA,EAAAA,EAAAA,IAAF,sDAI8BC,EAAAA,GAJ9B,oBAIkEC,EAAAA,GAJlE,iDAWH,eACEF,KAAKA,EAAAA,EAAAA,IAAF,sFAM8BC,EAAAA,GAN9B,oBAMkEC,EAAAA,GANlE,uBAYH,eACEF,IAAG,GAOFP,KAAkB,QAAC9C,EAAD,CAAgB2D,UAAWb,GAAgB1E,YAAaA,GAAatB,SAAUA,EAAUwF,aAAcA,KACzHS,KAAkB,QAACC,EAAD,CAAgBY,aAAcb,GAAgB3E,YAAaA,GAAatB,SAAUA,EAAUwF,aAAcA,KAC5HW,IAAaC,KAAY,QAAC7D,EAAD,CAAWwE,cAAeZ,GAAW7D,KAAK,YAAYtC,SAAUA,EAAUwF,aAAcA,KACjHxF,EAAQ,WAAiBoG,KAAY,QAACnD,EAAD,CAAU+D,aAAcZ,GAAUpG,SAAUA,EAAUsB,YAAaA,GAAakE,aAAcA,MACpI,eAAKe,IAAG,IACN,iBAAOjE,KAAK,WAAWqD,QAAS3F,EAAQ,MAAWiH,SAAWxB,GAAMD,GAAaC,EAAG,YACpF,aAAGc,IAAG,GAAiE,uCACrE,aACE1D,KAAK,sHACL0D,IAAG,EAMHb,OAAO,SAASwB,IAAI,cARtB,gCADF,OAYF,kBACEC,GAAG,mBACHd,UAAY,uFACZE,IAAG,EAA0CK,QArKpCvD,UAAa,IAAD,IACnC,MAAM+D,EAAK,UAAGnD,OAAOC,gBAAV,iBAAG,EAAiBmD,6BAApB,aAAG,EAAwCD,MAEjDA,GACHE,QAAQC,IAAI,sBAGdrI,GAAW,GACXS,GAAkB,GAElB,MAAM8B,EAAO,CACXoD,KAAM7E,EAAQ,eACdwH,SAAUzI,EACV0I,YAAa,6BACbC,OAAQ1H,EAAQ,eAChB2H,SAAU,CAAC,CAAEC,QAAS5I,KAGxB,IAAK,IAAD,MACF,MAAMM,QAAiBuI,MAAO,8BAA6BjH,cAA9B,EAA8BA,GAAcuG,0BAA2B,CAClGW,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAkB,UAASX,IAC3B,sBAAanD,cAAb,iBAAa,EAAQC,gBAArB,iBAAa,EAAkB8D,mBAA/B,aAAa,EAA+BC,WAE9CC,KAAMtE,KAAKuE,UAAU1G,KAGjB2G,QAAgB9I,EAAS+I,OAE/B,GAAwB,MAApB/I,EAASgJ,OACX/I,EAAY6I,GACZvI,GAAkB,GAClBY,IAAa,QACR,GAAI2H,SAAAA,EAASG,SAAU,CAAC,IAAD,EAC5B9H,IAAa,GACbF,IAAW,GACXd,EAAa2I,SAAD,UAACA,EAASG,SAAS,UAAnB,aAAC,EAAsBC,SACnC7I,GAAkB,EACnB,CAKF,CAJC,MAAO8I,GACPpJ,GAAW,EACZ,CAzBD,QA0BEH,GAAW,EACZ,GAwHqFwJ,UAAWpI,KACnF,gBAAM+F,UAAU,yBAAhB,wBAILP,IAAa,QAAC6C,EAAD,CAAaC,YAAa9C,cAAF,EAAEA,GAAYvE,WAAe,OAErE,aACE8E,UAAU,qCACVE,KAAKA,EAAAA,EAAAA,IAAF,4EAG8BC,EAAAA,GAH9B,oBAGkEC,EAAAA,GAHlE,0BAFL,8BAWE,aAAG5D,KAAK,YAAY6C,OAAO,SAASwB,IAAI,aACtCX,IAAG,GADL,6BAgBL/F,KACC,gCACGE,IACC,QAAC,IAAD,CAAO8H,QAAQ,uBAAuBK,QAAQ,UAAUC,QAAS,IAAMC,sBAAuBtI,MAC9F,QAAC,IAAD,CACEsI,sBAAuBtI,GACvB+H,QAAS9I,IAAmBE,EAAiBJ,GAAWJ,GAAWQ,GAAmB,8CACtFiJ,QAASzJ,GAAYM,IAAmBE,EAAkB,QAAU,UACpEkJ,QAAS1J,GAAYM,IAAmBE,EAAkB,KAAO,OAKxEX,IAAYW,IAAmBR,IAAYM,GAAkBkB,KAAgB,QAAC,IAAD,CAASoI,YAAa3H,GAAgB4H,oBAAkB,EAACC,eAAgBlJ,EAAQ,YAC9JE,KACC,QAAC,IAAD,CACEC,aAAcA,GACdC,eAAgBA,GAChBC,uBAAwBA,GACxBI,aAAcA,GACdD,UAAWA,GACXE,mBAAoBA,GACpBC,gBAAiBA,GACjBE,qBAAsBA,OAGvBD,IAAgBxB,IAAYH,IAAW,QAAC,IAAD,MACzCG,IAAYM,IAAmBE,IAAmBgB,KAAgB,QAAC,EAAAuI,EAAD,CAAoBC,aAActK,aAAF,EAAEA,EAAYuK,EAAAA,KAChHzJ,IAAmBF,IAAkB,QAAC,IAAD,CAAc4J,gBAAiBxK,EAAWQ,SAAUA,EAAUK,kBAAmBA,EAAmBE,kBAAmBA,EAAmB0J,iBAAkB3I,cAAF,EAAEA,GAAciE,KAAM7E,SAAUA,EAAUwJ,MAAO5I,cAAF,EAAEA,GAAcuG,KAC9P/G,KAAkB,QAAC,IAAD,CAAiBqJ,SAAU3K,aAAF,EAAEA,EAAY4K,EAAAA,MACxDhK,IAAmBkB,KAAiBxB,IAAYH,IAAW,QAAC,IAAD,CAAwB0K,qBAAsB7K,aAAF,EAAEA,EAAY8K,EAAAA,GAAyBhH,MAAOvB,cAAF,EAAEA,GAAgBuB,MAAO5B,QAASA,KA/K3L,EAoLI+E,EAAO,QAAC,KAAE8D,GAAH,SAAeA,CAAf,EAAb,iFAEA,MAAM3G,EAAiB,IAAyD,IAAD,UAAvD,UAAE2D,EAAF,YAAavF,EAAb,SAA0BtB,EAA1B,aAAoCwF,GAAmB,EAC7E,MAAMsE,GAAelL,EAAoB+F,KAAK3E,EAAQ,gBAChD+J,EAA+C,KAAvC,UAAA/J,EAAQ,sBAAR,eAA4BmD,SAAgB2G,EAC1D,OACE,QAAC,KAAD,CAAYxI,YAAaA,EAAaW,OAAQ4E,EAAW7G,SAAUA,EAAU+J,MAAOA,IAClF,eAAKxD,IAAG,IACN,iBACEjE,KAAK,OACLiE,KAAKA,EAAAA,EAAAA,IAAF,4DAImBwD,EAAQ,mBAAqB,wCAJhD,oHAWiBA,EAAQ,mBAAqB,wCAX9C,SAcH5E,MAAOnF,EAAQ,eACfiH,SAAWxB,GAAMD,EAAaC,EAAG,kBACjCuE,YAAanD,aAAF,EAAEA,EAAWmD,YACxBC,UAAWpD,aAAF,EAAEA,EAAWqD,SAExB,gBAAM3D,KAAKA,EAAAA,EAAAA,IAAF,aAAkB,UAAAvG,EAAQ,sBAAR,eAA4BmD,QAAS,GAA4C,KAAvC,UAAAnD,EAAQ,sBAAR,eAA4BmD,QAAe,QAAU,OAAjH,UAA2H,QAAC,KAAD,QAxB1I,EA8BI+C,EAAiB,IAAkE,IAAD,QAAhE,aAAEY,EAAF,YAAgBxF,EAAhB,KAA6BgB,EAA7B,SAAmCtC,EAAnC,aAA6CwF,GAAmB,EAEtF,MAAMV,EAAsB,UAAG9E,EAAQ,sBAAX,aAAG,EAA4B+E,MAAM,KAAKpC,KAAKlB,GAAS9C,EAAcgG,KAAKlD,EAAKuD,UACtGC,EAAwBH,aAAH,EAAGA,EAAwBI,OAAOC,IAAoB,IAAVA,IACjE4E,OAAuCzF,IAA/BtE,EAAQ,iBAAqCiF,GAAgE,KAAvC,UAAAjF,EAAQ,sBAAR,eAA4BmD,QAEhH,OACE,QAAC,KAAD,CAAY7B,YAAaA,EAAaW,OAAQ6E,EAAcxE,KAAMA,EAAMtC,SAAUA,EAAU+J,MAAOA,IACjG,oBACExD,KAAKA,EAAAA,EAAAA,IAAF,qEAKmBwD,EAAQ,mBAAqB,wCALhD,2MAgBiBA,EAAQ,mBAAqB,wCAhB9C,8EAwBH5E,MAAOnF,EAAQ,eACfgK,YAAalD,aAAF,EAAEA,EAAckD,YAC3B/C,SAAWxB,GAAMD,EAAaC,EAAG,oBA7BvC,EANF,iTAyCA,MAAMlD,EAAY,IAAgD,IAA/C,cAAEwE,EAAF,aAAiBvB,EAAjB,SAA+BxF,GAAe,EAC/D,MAAM,MAAEmC,EAAF,wBAASgI,EAAT,gBAAkCC,EAAlC,gBAAmDC,EAAnD,YAAoEC,EAApE,mBAAiFC,GAAuBxD,EAE9G,OACE,eAAKR,IAAG,IACN,iBAAOjE,KAAK,WAAW2E,SAAWxB,GAAMD,EAAaC,EAAG,aAAcE,QAAS3F,EAAQ,aACvF,aAAGuG,IAAG,GAAN,IAA+HpE,EAA/H,MACA,eAAKoE,IAAG,GACL+D,IAAe,QAAC,IAAD,CAAaE,QAASD,EAAoBE,KAAMJ,EAAiBK,KAAMN,EAAiBjI,MAAOgI,KALrH,EAHF,uKAcA,MAAMlH,EAAW,IAA4D,IAAD,UAA1D,aAAE+D,EAAF,SAAgBhH,EAAhB,YAA0BsB,EAA1B,aAAuCkE,GAAmB,EAC1E,OACE,iCAEIwB,SAAA,UAAAA,EAAc5E,qBAAd,eAA6Be,QAAS,IACtC,QAAC,KAAD,CAAY7B,YAAaA,EAAaW,OAAQ+E,IAC5C,kBACET,IAAG,EASHY,GAAG,YACHhC,MAAOnF,EAAQ,SACfiH,SAAWxB,GAAMD,EAAaC,EAAG,cAEhCuB,SAAA,UAAAA,EAAc5E,qBAAd,eAA6Be,QAAS,IAAK,kBAAQgC,MAAM,GAAGwF,QAAM,GAAvB,0CAC3C3D,SAfH,UAeGA,EAAc5E,qBAfjB,aAeG,EAA6BO,KAAI,CAACiI,EAAQC,KACzC,kBAAQ/I,IAAK+I,EAAO,YAAWD,EAAO/H,KAAMsC,MAAOyF,EAAOhI,OAASgI,EAAOhI,WArBtF,EA+BI+F,EAAc,IAAsB,IAArB,YAAEC,GAAkB,EACvC,OACE,iCACE,eACErC,KAAKA,EAAAA,EAAAA,IAAF,mEAI8BC,EAAAA,GAJ9B,oBAIkEC,EAAAA,GAJlE,0BAUL,eACEF,KAAKA,EAAAA,EAAAA,IAAF,0CAG8BC,EAAAA,GAH9B,oBAGkEC,EAAAA,GAHlE,uBAQH,QAACV,EAAD,CAAM8D,KAAMjB,KAtBlB,C","sources":["webpack://graphql-mesh-gateway/./node_modules/@adobe/gatsby-theme-aio/src/components/GetCredential/CredentialForm.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { css } from \"@emotion/react\";\r\nimport '@spectrum-css/contextualhelp/dist/index-vars.css';\r\nimport classNames from \"classnames\";\r\nimport { MyCredential } from './MyCredential';\r\nimport { Loading } from \"./Loading\";\r\nimport { IllustratedMessage } from \"./IllustratedMessage\";\r\nimport { ChangeOrganization } from './ChangeOrganization';\r\nimport { JoinBetaProgram } from './JoinBetaProgram';\r\nimport { AlertIcon, FormFields, getOrganization, MAX_TABLET_SCREEN_WIDTH, MIN_MOBILE_WIDTH } from './FormFields';\r\nimport { ContextHelp } from './ContextHelp';\r\nimport { Toast } from '../Toast';\r\nimport { NoDeveloperAccessError } from './NoDeveloperAccessError';\r\nimport Context from '../Context';\r\n\r\nconst hostnameRegex = /^(localhost:\\d{1,5}|(\\*\\.|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+(\\.[a-zA-Z]{2,})+)|\\*|(\\*\\.[a-zA-Z0-9-]+(\\.[a-zA-Z]{2,})+))$/;\r\nconst credentialNameRegex = /^(?=[A-Za-z0-9\\s]{6,}$)[A-Za-z0-9\\s]*$/;\r\n\r\nconst CredentialForm = ({ formProps, credentialType, service }) => {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [response, setResponse] = useState({});\r\n  const [errResp, setErrorResp] = useState(\"\");\r\n  const [showCreateForm, setShowCreateForm] = useState(true);\r\n  const [showCredential, setShowCredential] = useState(false);\r\n  const [formField, setFormField] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [redirectToBeta, setRedirectBetaProgram] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [alertShow, setAlertShow] = useState(false);\r\n  const [organizationChange, setOrganization] = useState(false);\r\n  const [organization, setOrganizationValue] = useState({});\r\n  const [showOrganization, setShowOrganization] = useState(true);\r\n  const [emailID, setEmailID] = useState('');\r\n\r\n  const { ims } = useContext(Context);\r\n\r\n  const credentialForm = formProps?.[CredentialForm];\r\n  const isFormValue = credentialForm?.children?.filter(data => Object.keys(data.props).some(key => key.startsWith('contextHelp')));\r\n\r\n  const getValueFromLocalStorage = async () => {\r\n    const orgInfo = localStorage?.getItem('OrgInfo');\r\n    const getOrgs = await getOrganization(setOrganizationValue);\r\n    if (orgInfo === null) {\r\n      if (getOrgs?.length === 1) {\r\n        setShowOrganization(false);\r\n      }\r\n    }\r\n    else if (getOrgs) {\r\n      const orgData = JSON.parse(orgInfo);\r\n      setShowOrganization(orgData.orgLen === 1 ? false : true);\r\n      setOrganizationValue(orgData);\r\n    }\r\n    if (!getOrgs) {\r\n      setOrganizationValue({});\r\n      setShowCreateForm(false)\r\n    }\r\n  }\r\n\r\n  const initialLoad = () => {\r\n    const fields = {};\r\n    const downloadObj = { label: \"Language\", selectOptions: [] };\r\n\r\n    credentialForm?.children.forEach(({ type, props }) => {\r\n      if (type === Downloads && props?.children) {\r\n        downloadObj.required = props.required || false;\r\n        downloadObj.selectOptions.push(...[].concat(props.children).map(({ props: { title, href } }) => ({ title, href })));\r\n        setFormData(prevData => ({ ...prevData, ...(Array.isArray(props.children) ? null : { Download: props.children?.props?.title }) }));\r\n      }\r\n      fields[type] = { ...props, required: type === CredentialName || props?.required };\r\n    });\r\n\r\n    if (downloadObj.selectOptions.length) {\r\n      fields[Download] = downloadObj;\r\n      if (downloadObj.selectOptions.length === 1) {\r\n        setFormData(prevData => ({ ...prevData, Download: downloadObj.selectOptions[0]?.title, zipUrl: downloadObj.selectOptions[0]?.href }));\r\n      }\r\n    }\r\n\r\n    setFormField(fields);\r\n    getValueFromLocalStorage();\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (window.adobeIMS?.isSignedInUser()) {\r\n      setTimeout(()=>{\r\n        setLoading(false)\r\n      },1000)\r\n    }\r\n    else {\r\n      setLoading(true)\r\n    }\r\n  }, [window.adobeIMS?.isSignedInUser()])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setOrganization(false);\r\n    }, 8000);\r\n  }, [organizationChange])\r\n\r\n  useEffect(() => {\r\n    if (showCreateForm) setIsError(false);\r\n  }, [showCreateForm])\r\n\r\n  useEffect(() => {\r\n    if (!showCredential && showCreateForm) {\r\n      const updateForm = { ...formData };\r\n      for (const key in updateForm) {\r\n        updateForm[key] = ''\r\n      };\r\n      setFormData(updateForm);\r\n      setAlertShow(false);\r\n    }\r\n  }, [showCredential])\r\n\r\n  useEffect(() => { initialLoad(); }, []);\r\n\r\n  useEffect(() => {\r\n    if (!organization) {\r\n      setOrganizationValue(undefined);\r\n      setShowCreateForm(false);\r\n      setLoading(true);\r\n    }\r\n    else if (organization && Object.keys(organization)?.length !== 0) {\r\n      setShowCreateForm(true)\r\n      setIsError(true)\r\n      setTimeout(() => {\r\n        setLoading(false)\r\n        setIsError(false)\r\n      }, 2000)\r\n    }\r\n    else {\r\n      if (Object.keys(organization)?.length === 0) {\r\n        setOrganizationValue(undefined);\r\n        setShowCreateForm(false);\r\n      }\r\n    }\r\n  }, [organization])\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      const updateForm = { ...formData };\r\n      for (const key in updateForm) {\r\n        updateForm[key] = ''\r\n      };\r\n      setFormData(updateForm);\r\n    }\r\n  }, [isError])\r\n\r\n  useEffect(() => {\r\n    const requiredFields = Array.from(credentialForm?.children || []).filter(child => child?.props?.required || child.type === CredentialName)?.map(child => child.type)\r\n    const isValidCredentialName = credentialNameRegex.test(formData.CredentialName) && formData['CredentialName']?.length >= 6;\r\n    const isCheckAllowedOrgins = requiredFields.filter((data) => data.name === \"AllowedOrigins\")\r\n    const validateAllowedOrigins = formData['AllowedOrigins']?.split(',').map((data) => hostnameRegex.test(data.trim()));\r\n    const isAllowedOriginsValid = isCheckAllowedOrgins ? validateAllowedOrigins?.every((value) => value === true) && formData[\"AllowedOrigins\"] !== undefined && formData[\"AllowedOrigins\"]?.length !== 0 : true;\r\n\r\n    const isValid = isValidCredentialName && isAllowedOriginsValid && formData.Agree === true;\r\n\r\n    setIsValid(isValid);\r\n  }, [formData]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (ims && ims.isSignedInUser()) {\r\n        const profile = await ims.getProfile();\r\n        setEmailID(profile?.email);\r\n      }\r\n    })();\r\n  }, [ims])\r\n\r\n  const handleChange = (e, type) => {\r\n    const value = (type === \"Downloads\" || type === \"Agree\") ? e.target.checked : e.target.value;\r\n    setFormData(prevData => ({ ...prevData, [type]: value }));\r\n\r\n    if (type === \"Download\" && formData['Downloads']) {\r\n      const selectedData = formField?.[Download]?.selectOptions.find(data => data.title === e.target.value);\r\n      selectedData && setFormData(prevData => ({ ...prevData, zipUrl: selectedData.href }));\r\n    }\r\n\r\n  };\r\n\r\n  const createCredential = async () => {\r\n    const token = window.adobeIMS?.getTokenFromStorage()?.token;\r\n\r\n    if (!token) {\r\n      console.log('User not logged in');\r\n    }\r\n\r\n    setLoading(true);\r\n    setShowCreateForm(false);\r\n\r\n    const data = {\r\n      name: formData[\"CredentialName\"],\r\n      platform: credentialType,\r\n      description: 'created for get credential',\r\n      domain: formData[\"AllowedOrigins\"],\r\n      services: [{ sdkCode: service }],\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`/console/api/organizations/${organization?.id}/integrations/adobeid`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"x-api-key\": window?.adobeIMS?.adobeIdData?.client_id,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const resResp = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        setResponse(resResp);\r\n        setShowCredential(true);\r\n        setAlertShow(true);\r\n      } else if (resResp?.messages) {\r\n        setAlertShow(true);\r\n        setIsValid(false);\r\n        setErrorResp(resResp?.messages[0]?.message);\r\n        setShowCreateForm(true);\r\n      }\r\n    } catch (error) {\r\n      setIsError(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sideObject = formField?.[Side];\r\n  const credentialName = formField?.[CredentialName];\r\n  const allowedOrigins = formField?.[AllowedOrigins];\r\n  const downloads = formField?.[Downloads];\r\n  const download = formField?.[Download];\r\n\r\n  return (\r\n    <>\r\n      {!redirectToBeta && showCreateForm && !loading && organization &&\r\n        <div\r\n          className={classNames(credentialForm?.className)}\r\n          css={css`\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 16px;\r\n          `}\r\n        >\r\n          <div\r\n            css={css`\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 16px;\r\n            color:var(--spectrum-global-color-gray-800);\r\n            width: 100%;\r\n            height: 100%;\r\n            text-align: left;\r\n            @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n              padding: 0;\r\n              width: 100%;\r\n            }\r\n          `}\r\n          >\r\n            {credentialForm?.title && <h3 className=\"spectrum-Heading spectrum-Heading--sizeL\">{credentialForm?.title}</h3>}\r\n            {credentialForm?.paragraph &&\r\n              <p\r\n                className=\"spectrum-Body spectrum-Body--sizeL\">\r\n                {credentialForm?.paragraph}\r\n              </p>\r\n            }\r\n            <p\r\n              className=\"spectrum-Body spectrum-Body--sizeS\"\r\n              css={css`color:var(--spectrum-global-color-gray-800);`}\r\n            >\r\n              You're creating this credential in  {organization?.type === \"developer\" ? \"in your personal developer organization\" : <span>[<b>{organization?.name}</b>] </span>}.\r\n              {showOrganization &&\r\n                <button\r\n                  tabIndex=\"0\"\r\n                  css={css`\r\n                    border: none;\r\n                    padding:0;\r\n                    font-family:'adobe-clean';\r\n                    background: transparent;\r\n                    margin-left :10px;\r\n                    text-decoration:underline;\r\n                    color: var(--spectrum-global-color-gray-800);\r\n                    cursor:pointer;`\r\n                  }\r\n                  onClick={() => setModalOpen(true)}\r\n                >\r\n                  Change organization?\r\n                </button>}\r\n            </p>\r\n          </div>\r\n          <div\r\n            css={css`\r\n              display:flex;\r\n              gap: 35px;\r\n\r\n              @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n                flex-direction : column;\r\n                padding-left: 0;\r\n              }\r\n\r\n            `}\r\n          >\r\n            <div\r\n              css={css`\r\n                display:flex;\r\n                flex-direction : column;\r\n                gap: 35px;\r\n                width:50%;\r\n\r\n                @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n                  width:100%;\r\n                }\r\n\r\n              `}\r\n            >\r\n              <div\r\n                css={css`\r\n                  display:flex;\r\n                  gap:24px;\r\n                  flex-direction:column;\r\n                  width: 100%;\r\n                `}\r\n              >\r\n                {credentialName && <CredentialName nameProps={credentialName} isFormValue={isFormValue} formData={formData} handleChange={handleChange} />}\r\n                {allowedOrigins && <AllowedOrigins originsProps={allowedOrigins} isFormValue={isFormValue} formData={formData} handleChange={handleChange} />}\r\n                {downloads && download && <Downloads downloadsProp={downloads} type=\"Downloads\" formData={formData} handleChange={handleChange} />}\r\n                {formData['Downloads'] && download && <Download downloadProp={download} formData={formData} isFormValue={isFormValue} handleChange={handleChange} />}\r\n                <div css={css`display: flex; gap: 10px;`}>\r\n                  <input type=\"checkbox\" checked={formData['Agree']} onChange={(e) => handleChange(e, 'Agree')} />\r\n                  <p css={css`color:var(--spectrum-global-color-gray-800);margin:0;`} >{`By checking this box, you agree to `}\r\n                    <a\r\n                      href=\"https://wwwimages2.adobe.com/content/dam/cc/en/legal/servicetou/Adobe-Developer-Additional-Terms_en-US_20230822.pdf\"\r\n                      css={css`\r\n                        color:rgb(0, 84, 182);\r\n                        &:hover {\r\n                          color: rgb(2, 101, 220);\r\n                        }\r\n                      `}\r\n                      target=\"_blank\" rel=\"noreferrer\">Adobe Developer Terms of Use</a>.\r\n                  </p>\r\n                </div>\r\n                <button\r\n                  id=\"credentialButton\"\r\n                  className={`spectrum-Button spectrum-Button--fill spectrum-Button--accent spectrum-Button--sizeM`}\r\n                  css={css`width:fit-content;margin-top:10px`} onClick={createCredential} disabled={!isValid} >\r\n                  <span className=\"spectrum-Button-label\">Create credential</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {sideObject ? <SideContent sideContent={sideObject?.children} /> : null}\r\n          </div>\r\n          <p\r\n            className=\"spectrum-Body spectrum-Body--sizeS\"\r\n            css={css` \r\n              color:var(--spectrum-global-color-gray-800);\r\n              \r\n              @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n                padding-left: 0;\r\n              }\r\n\r\n            `} >\r\n            Have existing credentials?\r\n            <a href=\"/console/\" target=\"_blank\" rel=\"noreferrer\"\r\n              css={css`\r\n                margin-left : 10px;\r\n                color:var(--spectrum-global-color-gray-800);\r\n\r\n                &:hover {\r\n                  color:var(--spectrum-global-color-gray-900);\r\n                }\r\n\r\n              `}>\r\n              Go to Developer Console\r\n            </a>\r\n          </p>\r\n        </div>\r\n      }\r\n\r\n      {alertShow &&\r\n        <>\r\n          {organizationChange ?\r\n            <Toast message=\"Organization Changed\" variant=\"success\" disable={8000} customDisableFunction={setAlertShow} /> :\r\n            <Toast\r\n              customDisableFunction={setAlertShow}\r\n              message={showCreateForm && !showCredential ? errResp : !isError && showCredential && `Your credentials were created successfully.`}\r\n              variant={isError || (showCreateForm && !showCredential) ? \"error\" : \"success\"}\r\n              disable={isError || (showCreateForm && !showCredential) ? null : 8000}\r\n            />\r\n          }\r\n        </>\r\n      }\r\n      {loading && !showCredential && !isError && !showCreateForm && organization && <Loading credentials={credentialForm} isCreateCredential downloadStatus={formData['Downloads']} />}\r\n      {modalOpen && (\r\n        <ChangeOrganization\r\n          setModalOpen={setModalOpen}\r\n          redirectToBeta={redirectToBeta}\r\n          setRedirectBetaProgram={setRedirectBetaProgram}\r\n          setAlertShow={setAlertShow}\r\n          alertShow={alertShow}\r\n          organizationChange={organizationChange}\r\n          setOrganization={setOrganization}\r\n          setOrganizationValue={setOrganizationValue}\r\n        />\r\n      )}\r\n      {(!organization || isError) && loading && <Loading />}\r\n      {isError && !showCreateForm && !showCredential && !organization && <IllustratedMessage errorMessage={formProps?.[IllustratedMessage]} />}\r\n      {showCredential && !showCreateForm && <MyCredential credentialProps={formProps} response={response} setShowCreateForm={setShowCreateForm} setShowCredential={setShowCredential} organizationName={organization?.name} formData={formData} orgID={organization?.id} />}\r\n      {redirectToBeta && <JoinBetaProgram joinBeta={formProps?.[JoinBetaProgram]} />}\r\n      {!showCreateForm && !organization && !isError && !loading && <NoDeveloperAccessError developerAccessError={formProps?.[NoDeveloperAccessError]} title={credentialForm?.title} emailID={emailID} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Side = ({ side }) => (side);\r\n\r\nconst CredentialName = ({ nameProps, isFormValue, formData, handleChange }) => {\r\n  const inValidName = !credentialNameRegex.test(formData['CredentialName'])\r\n  const isRed = formData[\"CredentialName\"]?.length !== 0 && inValidName;\r\n  return (\r\n    <FormFields isFormValue={isFormValue} fields={nameProps} formData={formData} isRed={isRed}>\r\n      <div css={css`position:relative; display:inline-block; width: 100%`}>\r\n        <input\r\n          type=\"text\"\r\n          css={css`\r\n            padding: 7px;\r\n            border-radius: 3px;\r\n            width: 97%;\r\n            border: 1px solid ${isRed ? \"rgb(211, 21, 16)\" : \"var(--spectrum-global-color-gray-400)\"};\r\n             &::placeholder {\r\n               font-style: italic; \r\n               color: var(--spectrum-global-color-gray-400); \r\n              }\r\n             &:focus {\r\n              outline: none;\r\n              border-color: ${isRed ? \"rgb(211, 21, 16)\" : \"var(--spectrum-global-color-gray-400)\"};\r\n            }\r\n          `}\r\n          value={formData[\"CredentialName\"]}\r\n          onChange={(e) => handleChange(e, \"CredentialName\")}\r\n          placeholder={nameProps?.placeholder}\r\n          maxLength={nameProps?.range}\r\n        />\r\n        <span css={css`display : ${formData[\"CredentialName\"]?.length < 3 && formData[\"CredentialName\"]?.length !== 0 ? \"block\" : \"none\"}`}><AlertIcon /></span>\r\n      </div>\r\n    </FormFields>\r\n  )\r\n}\r\n\r\nconst AllowedOrigins = ({ originsProps, isFormValue, type, formData, handleChange }) => {\r\n\r\n  const validateAllowedOrigins = formData['AllowedOrigins']?.split(',').map((data) => hostnameRegex.test(data.trim()));\r\n  const isAllowedOriginsValid = validateAllowedOrigins?.every((value) => value === true);\r\n  const isRed = formData[\"AllowedOrigins\"] !== undefined && !isAllowedOriginsValid && formData[\"AllowedOrigins\"]?.length !== 0;\r\n\r\n  return (\r\n    <FormFields isFormValue={isFormValue} fields={originsProps} type={type} formData={formData} isRed={isRed} >\r\n      <textarea\r\n        css={css`\r\n          flex: 1;\r\n          padding: 7px;\r\n          height: 50px;\r\n          border-radius: 3px;\r\n          border: 1px solid ${isRed ? \"rgb(211, 21, 16)\" : \"var(--spectrum-global-color-gray-400)\"};\r\n          resize: none; \r\n          width: 90%;\r\n          color: #4b4b4b;\r\n          font-family: adobe-clean, Helvetica, Arial, sans-serif;\r\n          &::placeholder {\r\n            color:var(--spectrum-global-color-gray-600);\r\n            font-style: italic;\r\n          }\r\n          &:focus {\r\n            outline: none;\r\n            border-color: ${isRed ? \"rgb(211, 21, 16)\" : \"var(--spectrum-global-color-gray-400)\"};\r\n          }\r\n          &:hover {\r\n            &::placeholder {\r\n              color:var(--spectrum-global-color-gray-800);\r\n            }\r\n          }\r\n        `}\r\n        value={formData[\"AllowedOrigins\"]}\r\n        placeholder={originsProps?.placeholder}\r\n        onChange={(e) => handleChange(e, \"AllowedOrigins\")}\r\n      ></textarea>\r\n    </FormFields>\r\n  )\r\n}\r\n\r\nconst Downloads = ({ downloadsProp, handleChange, formData }) => {\r\n  const { label, contextHelpLabelForLink, contextHelpLink, contextHelpText, contextHelp, contextHelpHeading } = downloadsProp;\r\n\r\n  return (\r\n    <div css={css` display: flex;gap: 10px;align-items: center;`}>\r\n      <input type=\"checkbox\" onChange={(e) => handleChange(e, \"Downloads\")} checked={formData['Downloads']} />\r\n      <p css={css` color:var(--spectrum-dialog-confirm-description-text-color, var(--spectrum-global-color-gray-800));margin:0;`} > {label} </p>\r\n      <div css={css`cursor:pointer;display: flex;justify-content: center;align-items: center;`}>\r\n        {contextHelp && <ContextHelp heading={contextHelpHeading} text={contextHelpText} link={contextHelpLink} label={contextHelpLabelForLink} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Download = ({ downloadProp, formData, isFormValue, handleChange }) => {\r\n  return (\r\n    <>\r\n      {\r\n        downloadProp?.selectOptions?.length > 1 &&\r\n        <FormFields isFormValue={isFormValue} fields={downloadProp}>\r\n          <select\r\n            css={css`\r\n              font-style: italic;\r\n              font-weight: 500;\r\n              font-family: 'adobe-clean';\r\n              padding: 7px;\r\n              border-radius: 3px;\r\n              border: 1px solid #D0D0D0 !important;\r\n              width:100%;\r\n            `}\r\n            id=\"selectBox\"\r\n            value={formData['Download']}\r\n            onChange={(e) => handleChange(e, \"Download\")}\r\n          >\r\n            {downloadProp?.selectOptions?.length > 1 && <option value=\"\" hidden>Select language for your code pickData</option>}\r\n            {downloadProp?.selectOptions?.map((option, index) => (\r\n              <option key={index} data-link={option.href} value={option.title} >{option.title}</option>\r\n            ))}\r\n          </select>\r\n        </FormFields>\r\n      }\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nconst SideContent = ({ sideContent }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        css={css`\r\n          width: 2px; \r\n          background-color: #D0D0D0; \r\n\r\n          @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n            display:none;\r\n          }\r\n\r\n        `}\r\n      />\r\n      <div\r\n        css={css`\r\n          width:50%;\r\n \r\n          @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n            width:100%;\r\n          }\r\n\r\n        `}>\r\n        <Side side={sideContent} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { CredentialForm, Side, CredentialName, AllowedOrigins, Downloads, Download, SideContent };"],"names":["hostnameRegex","credentialNameRegex","CredentialForm","formProps","credentialType","service","loading","setLoading","useState","isError","setIsError","response","setResponse","errResp","setErrorResp","showCreateForm","setShowCreateForm","showCredential","setShowCredential","formField","setFormField","formData","setFormData","modalOpen","setModalOpen","redirectToBeta","setRedirectBetaProgram","isValid","setIsValid","alertShow","setAlertShow","organizationChange","setOrganization","organization","setOrganizationValue","showOrganization","setShowOrganization","emailID","setEmailID","ims","useContext","Context","credentialForm","isFormValue","children","filter","data","Object","keys","props","some","key","startsWith","initialLoad","fields","downloadObj","label","selectOptions","forEach","type","Downloads","required","push","concat","map","title","href","prevData","Array","isArray","Download","CredentialName","length","zipUrl","async","orgInfo","localStorage","getItem","getOrgs","getOrganization","orgData","JSON","parse","orgLen","getValueFromLocalStorage","useEffect","window","adobeIMS","isSignedInUser","setTimeout","updateForm","undefined","requiredFields","from","child","isValidCredentialName","test","isCheckAllowedOrgins","name","validateAllowedOrigins","split","trim","isAllowedOriginsValid","every","value","Agree","profile","getProfile","email","handleChange","e","target","checked","selectedData","find","sideObject","Side","credentialName","allowedOrigins","AllowedOrigins","downloads","download","className","classNames","css","MIN_MOBILE_WIDTH","MAX_TABLET_SCREEN_WIDTH","paragraph","tabIndex","onClick","nameProps","originsProps","downloadsProp","downloadProp","onChange","rel","id","token","getTokenFromStorage","console","log","platform","description","domain","services","sdkCode","fetch","method","headers","adobeIdData","client_id","body","stringify","resResp","json","status","messages","message","error","disabled","SideContent","sideContent","variant","disable","customDisableFunction","credentials","isCreateCredential","downloadStatus","I","errorMessage","IllustratedMessage","credentialProps","organizationName","orgID","joinBeta","JoinBetaProgram","developerAccessError","NoDeveloperAccessError","side","inValidName","isRed","placeholder","maxLength","range","contextHelpLabelForLink","contextHelpLink","contextHelpText","contextHelp","contextHelpHeading","heading","text","link","hidden","option","index"],"sourceRoot":""}