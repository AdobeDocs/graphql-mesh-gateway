{"version":3,"file":"component---src-pages-gateway-handlers-openapi-md-fd64c8e7ad070f5f3e74.js","mappings":"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","sources":["webpack://graphql-mesh-gateway/./src/pages/gateway/handlers/openapi.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"openapi-handlers\"\n    }}><inlineCode parentName=\"h1\">{`openapi`}</inlineCode>{` handlers`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`openapi`}</inlineCode>{` handler allows you to connect to an OpenAPI-compliant REST service endpoint or static Swagger schema using a `}<inlineCode parentName=\"p\">{`.json`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.yaml`}</inlineCode>{` file.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`When using a Swagger schema, API Mesh can only access `}<inlineCode parentName=\"p\">{`application/json`}</inlineCode>{` content from the Swagger API definition.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`API Mesh does not accept a wildcard (`}<inlineCode parentName=\"p\">{`*/*`}</inlineCode>{`) as a content type.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"CommerceREST\",\n        \"handler\": {\n          \"openapi\": {\n            \"source\": \"https://venia.magento.com/rest/\"\n          }\n        },\n      }\n    ]\n  },\n}\n`}</code></pre>\n    <p>{`To import a remote or local schema using `}<inlineCode parentName=\"p\">{`.json`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.yaml`}</inlineCode>{`, use a local source, see `}<a parentName=\"p\" {...{\n        \"href\": \"../../gateway/./handlers/index.md#reference-local-files-in-handlers\"\n      }}>{`Reference local file handlers`}</a>{` for more information.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If your source handler's schema is modified, you must `}<a parentName=\"p\" {...{\n        \"href\": \"../../gateway/create-mesh.md#update-an-existing-mesh\"\n      }}>{`update your mesh`}</a>{` to allow API Mesh to cache any changes.`}</p>\n    <h2 {...{\n      \"id\": \"naming-conventions\"\n    }}>{`Naming conventions`}</h2>\n    <p>{`The OpenAPI handler uses the following naming conventions:`}</p>\n    <h3 {...{\n      \"id\": \"type-naming\"\n    }}>{`Type naming`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`operationId`}</inlineCode>{` is only modified when necessary according to the GraphQL spec:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The following characters are replaced with an underscore (`}<inlineCode parentName=\"li\">{`_`}</inlineCode>{`): white space, `}<inlineCode parentName=\"li\">{`.`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`/`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`:`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`-`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Characters that are not digits or Latin alphabet letters are replaced with their character codes.`}</li>\n      <li parentName=\"ul\">{`If the first character of a name is a digit, it is prefixed with an underscore (`}<inlineCode parentName=\"li\">{`_`}</inlineCode>{`), because GraphQL does not allow initial digits.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"unnamed-types\"\n    }}>{`Unnamed types`}</h3>\n    <p>{`Unnamed types use path-based naming. This means a type in your schema could be structured like `}<inlineCode parentName=\"p\">{`query_getUsers_items_firstName`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"headers-from-context\"\n    }}>{`Headers from context`}</h2>\n    <p>{`The following example demonstrates how to include authentication headers in the context of your mesh.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`...\n      \"handler\": {\n        \"openapi\": {\n          \"source\": \"./my-schema.json\",\n          \"operationHeaders\": {\n            \"Authorization\": \"Bearer {context.headers['x-my-api-token']}\"\n          }\n        }\n      }\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"advanced-cookie-handling\"\n    }}>{`Advanced cookie handling`}</h2>\n    <p>{`When building a web application cookies are often used for secure authentication. Conversely, mobile applications tend to use an HTTP header.`}</p>\n    <h3 {...{\n      \"id\": \"setting-and-unsetting-cookies\"\n    }}>{`Setting and unsetting cookies`}</h3>\n    <p>{`To set the cookie for the web application, we need to access the HTTP response that is sent back to the client by using `}<inlineCode parentName=\"p\">{`additionalResolvers`}</inlineCode>{`. To do this, we need to create two new resolvers, one for login and one for logout.`}</p>\n    <p>{`The first step is to edit the `}<inlineCode parentName=\"p\">{`mesh.json`}</inlineCode>{` file, and add the following at the end:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"additionalTypeDefs\": \"extend type Mutation {\\\\n  login(credentials: Credentials!): String\\\\n  logout: Boolean\\\\n}\\\\n\",\n  \"additionalResolvers\": [\n    \"./src/additional-resolvers.js\"\n  ]\n}\n`}</code></pre>\n    <p>{`Then manage the cookie in the new resolvers:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// lifespan of our cookie\nconst oneYear = 365 * 24 * 3600\n\nconst resolvers = {\n  Mutation: {\n    async login(root, args, context, info) {\n      // Call the Rest API's login operation\n      const result = await context.Rest.Mutation.accountLogin({\n        root,\n        args: {\n          credentials: args.credentials\n        },\n        context,\n        info\n      })\n      // if \\`result\\` contains a JWT token, you could instead decode it and set \\`Expires\\`\n      // to the JWT token's expiration date\n      res.set('Set-Cookie', \\`accessToken=\\${result}; Path=/; Secure; HttpOnly; Max-Age=\\${oneYear};\\`)\n\n      return result\n    },\n    logout(root, args, { res }) {\n      // use old date to unset cookie\n      res.set('Set-Cookie', \\`accessToken=logout; Path=/; Secure; HttpOnly; Expires=Thu, 1 Jan 1970 00:00:00 GMT;\\`)\n\n      return true\n    },\n  },\n}\n\nmodule.exports = { resolvers }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"callbacks-as-subscriptions\"\n    }}>{`Callbacks as Subscriptions`}</h2>\n    <p>{`The OpenAPI handler can process OpenAPI Spec Callbacks as GraphQL Subscriptions, by using your Publish-subscribe pattern PubSub implementation to consume the data. However, you need to define webhooks for callbacks individually.`}</p>\n    <h2 {...{\n      \"id\": \"loading-source-from-a-cdn\"\n    }}>{`Loading source from a CDN`}</h2>\n    <p>{`API Mesh supports loading sources from a CDN or schema registry by using the `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` property.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"sources\": [\n    {\n      \"name\": \"MyApi\",\n      \"handler\": {\n        \"openapi\": {\n          \"source\": \"https://cdn.<your cdn>.graphql\",\n          \"schemaHeaders\": {\n            \"X-CDN-Key\": \"abc123+d4/5e=\"\n          }\n        }\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"config-api-reference\"\n    }}>{`Config API reference`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`source`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Any`}</inlineCode>{`, required) - Reference to your API source, such as a local file, a remote file, or a URL endpoint`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sourceFormat`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String (json | yaml)`}</inlineCode>{`) - Format of the source file`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`schemaHeaders`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`JSON`}</inlineCode>{`) - JSON object for adding headers to API calls for runtime schema introspection`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If you are using a remote URL endpoint, you can set headers for the HTTP request to fetch your schema.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`operationHeaders`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`JSON`}</inlineCode>{`) - JSON object for adding headers to API calls for runtime operation execution`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`baseUrl`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - URL that all paths are based on`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`baseURL`}</inlineCode>{` overrides the server object in the OpenAPI Spec.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`qs`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`JSON`}</inlineCode>{`) - JSON object for the query search parameters to add to the API call`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`includeHttpDetails`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Boolean`}</inlineCode>{`) - Flag for including HTTP Response details in the result object`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}