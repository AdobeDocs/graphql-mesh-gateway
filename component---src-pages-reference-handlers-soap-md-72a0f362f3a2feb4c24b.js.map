{"version":3,"file":"component---src-pages-reference-handlers-soap-md-72a0f362f3a2feb4c24b.js","mappings":"8RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,QADR,SAGA,6DAA8C,cAAGC,WAAW,IACxD,KAAQ,sBADkC,QAA9C,KAEsB,uBAAYA,WAAW,KAAvB,QAFtB,uEAGA,sDACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,6RAiBL,eACE,GAAM,wBADR,yBAGA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,YAAiF,uBAAYA,WAAW,MAAvB,UAAjF,qCACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,aAApB,YAAsF,uBAAYA,WAAW,MAAvB,UAAtF,0EACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,YAAqF,uBAAYA,WAAW,MAAvB,UAArF,oDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,YAAqF,uBAAYA,WAAW,MAAvB,UAArF,sDAGJ,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,YAAyF,uBAAYA,WAAW,MAAvB,UAAzF,0FACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,aAApB,YAAsF,uBAAYA,WAAW,MAAvB,UAAtF,wBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,cAApB,YAAuF,uBAAYA,WAAW,MAAvB,UAAvF,yBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,YAAqF,uBAAYA,WAAW,MAAvB,UAArF,iBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,iBAApB,YAA0F,uBAAYA,WAAW,MAAvB,UAA1F,yDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,kBAApB,YAA2F,uBAAYA,WAAW,MAAvB,UAA3F,0DACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,YAAyF,uBAAYA,WAAW,MAAvB,UAAzF,yDAGJ,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,iBAApB,YAA0F,uBAAYA,WAAW,MAAvB,OAA1F,wIAAkR,uBAAYA,WAAW,MAAvB,OAAlR,QAA0U,uBAAYA,WAAW,MAAvB,OAA1U,4BAAsZ,uBAAYA,WAAW,MAAvB,iBAAtZ,mBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,oBAApB,YAA6F,uBAAYA,WAAW,MAAvB,QAA7F,iHACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,YAAyF,uBAAYA,WAAW,MAAvB,WAAzF,WAAwJ,uBAAYA,WAAW,MAAvB,QAAxJ,uVAC0L,uBAAYA,WAAW,MAAvB,QAD1L,gBAC2P,uBAAYA,WAAW,MAAvB,SAD3P,+EAEA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,mBAApB,YAA4F,uBAAYA,WAAW,MAAvB,WAA5F,WAA2J,uBAAYA,WAAW,MAAvB,QAA3J,4LAAwY,uBAAYA,WAAW,MAAvB,gBAAxY,2MAA4oB,uBAAYA,WAAW,MAAvB,QAA5oB,gBAA6sB,uBAAYA,WAAW,MAAvB,SAA7sB,+EACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,8BAApB,YAAuG,uBAAYA,WAAW,MAAvB,mBAAvG,2GACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,WAApB,YAAoF,uBAAYA,WAAW,MAAvB,UAApF,gBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,YAAiF,uBAAYA,WAAW,MAAvB,UAAjF,gBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,aAApB,YAAsF,uBAAYA,WAAW,MAAvB,UAAtF,gBACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,YAAiF,uBAAYA,WAAW,MAAvB,6BAAjF,kBAGJ,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,6BAApB,YAAsG,uBAAYA,WAAW,MAAvB,WAAtG,oDAA8M,uBAAYA,WAAW,MAAvB,SAA9M,QAAwQ,uBAAYA,WAAW,MAAvB,OAAxQ,yBAIL,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://graphql-mesh-gateway/./src/pages/reference/handlers/soap.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"soap\"\n    }}>{`SOAP`}</h1>\n    <p>{`The SOAP handler allows you to consume `}<a parentName=\"p\" {...{\n        \"href\": \"https://soapui.org\"\n      }}>{`SOAP`}</a>{` `}<inlineCode parentName=\"p\">{`WSDL`}</inlineCode>{` files and generate a remote executable schema for those services.`}</p>\n    <p>{`Add SOAP handlers to your mesh:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"CountryInfo\",\n        \"handler\": {\n          \"soap\": {\n            \"wsdl\": \"http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL\"\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"config-api-reference\"\n    }}>{`Config API Reference`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`wsdl`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required) - A URL to your WSDL`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`basicAuth`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{`) - Basic Authentication Configuration, includes the following fields:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`username`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required) - Username for Basic Authentication`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`password`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required) - Password for Basic Authentication`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`securityCert`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{`) - SSL Certificate Based Authentication Configuration, includes the following fields:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`publicKey`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - Your public key`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`privateKey`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - Your private key`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`password`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - Password`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`publicKeyPath`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - Path to the file or URL contains your public key`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`privateKeyPath`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - Path to the file or URL contains your private key`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`passwordPath`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`) - Path to the file or URL contains your password`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`schemaHeaders`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Any`}</inlineCode>{`) - JSON object representing the Headers to add to the runtime of the API calls only for schema introspection. You can also provide `}<inlineCode parentName=\"li\">{`.js`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`.ts`}</inlineCode>{` file path that exports `}<inlineCode parentName=\"li\">{`schemaHeaders`}</inlineCode>{` as an object.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`operationHeaders`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`JSON`}</inlineCode>{`) - JSON object representing the headers to add to the runtime of the API calls for operation during runtime`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`includePorts`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Boolean`}</inlineCode>{`) - If `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, the ports defined in the WSDL are represented as GraphQL-Type objects in the schema. The fields of the object will be the operations of the port.\nMost SOAP endpoints only define one port, so including it in the schema will be inconvenient, but if there are multiple ports with operations of the same name, you should set this option to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`. If set to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` (default), only one of the identically-named operations will be callable.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`includeServices`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Boolean`}</inlineCode>{`) - If `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, the services defined in the WSDL will be represented as GraphQL-Type objects in the schema. The fields of the object will be the ports of the service (or the operation, dependent on `}<inlineCode parentName=\"li\">{`includePorts`}</inlineCode>{`). Most SOAP endpoints only define one service, so including it in the schema will be inconvenient, but if there are multiple services with operations of the same name, you should set this option to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`. If set to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` (default), only one of the identically-named operations will be callable.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`selectQueryOrMutationField`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Array of Object`}</inlineCode>{`) - Allows you to explicitly override the default operation (Query or Mutation) for any SOAP operation:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`service`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`port`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`operation`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`, required)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`String (query | mutation)`}</inlineCode>{`, required)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`selectQueryOperationsAuto`}</inlineCode>{` (type: `}<inlineCode parentName=\"li\">{`Boolean`}</inlineCode>{`) - Automatically puts operations starting with `}<inlineCode parentName=\"li\">{`query`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`get`}</inlineCode>{` into the Query type`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}