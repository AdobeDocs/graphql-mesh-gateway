"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[4921],{5579:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return s},default:function(){return c}});var t,r=n(87462),m=n(63366),p=(n(15007),n(64983)),i=n(91515),o=["components"],s={},d=(t="InlineAlert",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,p.mdx)("div",e)}),l={_frontmatter:s},x=i.Z;function c(e){var a=e.components,n=(0,m.Z)(e,o);return(0,p.mdx)(x,(0,r.Z)({},l,n,{components:a,mdxType:"MDXLayout"}),(0,p.mdx)("h1",{id:"fastly-configuration"},"Fastly configuration"),(0,p.mdx)("p",null,"Using ",(0,p.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/cdn/fastly.html?lang=en"},"Fastly")," as a content delivery network (CDN) with API Mesh for Adobe Developer App Builder provides additional security and improved performance. To fully integrate API Mesh, Fastly, and Adobe Commerce, you must follow the configuration instructions in the following sections."),(0,p.mdx)("h2",{id:"configure-fastly-in-adobe-commerce"},"Configure Fastly in Adobe Commerce"),(0,p.mdx)("p",null,"Use the following process to configure edge caching for Adobe Commerce using the provided Fastly CDN."),(0,p.mdx)("ol",null,(0,p.mdx)("li",{parentName:"ol"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/cdn/setup-fastly/fastly-configuration.html?lang=en#get-fastly-credentials"},"Get your Fastly credentials"),".")),(0,p.mdx)("li",{parentName:"ol"},(0,p.mdx)("p",{parentName:"li"},"In the Adobe Commerce Admin, select ",(0,p.mdx)("strong",{parentName:"p"},"Store")," > Settings > ",(0,p.mdx)("strong",{parentName:"p"},"Configuration")," > ",(0,p.mdx)("strong",{parentName:"p"},"Advanced")," > ",(0,p.mdx)("strong",{parentName:"p"},"System")," > ",(0,p.mdx)("strong",{parentName:"p"},"Full Page Cache")," and set the ",(0,p.mdx)("strong",{parentName:"p"},"Caching Application")," field to ",(0,p.mdx)("strong",{parentName:"p"},"Fastly CDN"),".")),(0,p.mdx)("li",{parentName:"ol"},(0,p.mdx)("p",{parentName:"li"},"Enter the Fastly credentials you retrieved previously into the ",(0,p.mdx)("strong",{parentName:"p"},"Fastly Service ID")," and ",(0,p.mdx)("strong",{parentName:"p"},"Fastly API Token")," fields. Then click the Test Credentials button to verify that your credentials are correct.")),(0,p.mdx)("li",{parentName:"ol"},(0,p.mdx)("p",{parentName:"li"},"Under ",(0,p.mdx)("strong",{parentName:"p"},"Fastly Configuration")," > ",(0,p.mdx)("strong",{parentName:"p"},"Custom VCL Snippets")," click ",(0,p.mdx)("strong",{parentName:"p"},"Create")," and add the following ",(0,p.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/cdn/custom-vcl-snippets/fastly-vcl-custom-snippets.html"},"snippets"),". For more information on VCL subroutines, see ",(0,p.mdx)("a",{parentName:"p",href:"https://developer.fastly.com/reference/vcl/subroutines/"},"Custom Subroutines"),"."),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Indicates when to bypass the cache:"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_bypass")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"recv"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"60"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'if ((req.request == "GET" || req.request == "HEAD") && (req.url.path ~ "/graphql" || req.url "^/api/(.*)") && req.url.qs ~ "query=" && req.http.x-commerce-bypass-fastly-cache == "true") {set req.http.graphql = "1";} else {unset req.http.graphql;} if ( req.url.path !~ "/graphql" && req.url !~ "^/api/(.*)" ) {\n\nset req.http.Magento-Original-URL = req.url;\n\nset req.url = querystring.regfilter(req.url,"^(utm_.*|gclid|gdftrk|_ga|mc_.*|trk_.*|dm_i|_ke|sc_.*|fbclid)$");\n}\n...\n'))))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Allows API Mesh to function as a backend:"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_backend")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"init"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"1"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'backend F_graph_prod_adobe_io {\n    .always_use_host_header = true;\n    .between_bytes_timeout = 10s;\n    .connect_timeout = 1s;\n    .dynamic = true;\n    .first_byte_timeout = 15s;\n    .host = "graph.adobe.io";\n    .host_header = "graph.adobe.io";\n    .max_connections = 200;\n    .port = "443";\n    .share_key = "XXXXXXXXXXXXXXXX";\n    .ssl = true;\n    .ssl_cert_hostname = "graph.adobe.io";\n    .ssl_check_cert = always;\n    .ssl_sni_hostname = "graph.adobe.io";\n    .probe = {\n        .dummy = true;\n        .initial = 5;\n        .request = "HEAD / HTTP/1.1" "Host: graph.adobe.io" "Connection: close";\n        .threshold = 1;\n        .timeout = 2s;\n        .window = 5;\n    }\n}\n'))))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Enables the bypass header in API Mesh:"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_recv")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"recv"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"10"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'if(req.http.x-commerce-bypass-fastly-cache == "true") { return(pass); }\n'))))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Cache miss - replace the ",(0,p.mdx)("inlineCode",{parentName:"p"},"<mesh_id>")," and ",(0,p.mdx)("inlineCode",{parentName:"p"},"<mesh_api_key>")," placeholders with the information from your mesh URL, which has the following structure: ",(0,p.mdx)("inlineCode",{parentName:"p"},"https://graph.adobe.io/api/<meshId>/graphql?api_key=<your_apiKey>"),":"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_miss")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"miss"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"60"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'if (req.url ~ "^/api/") {\nset req.backend = F_graph_prod_adobe_io;\n}\n//apiMESH prod mapping\nif (req.url ~ "^/api/<mesh_id>") {\nset bereq.http.tenantuuid = "<mesh_id>";\nset bereq.http.x-api-key = "<mesh_api_key>";\n# Optionally add another environment\n# }\n# //apiMESH stage mapping\n# if (req.url ~ "^/api/<mesh_id>") {\n# set bereq.http.tenantuuid = "<mesh_id>";\n# set bereq.http.x-api-key = "<mesh_api_key>";\n# }\n')))),(0,p.mdx)("p",{parentName:"li"},"The remaining snippets allow you to query your mesh URL without appending the ",(0,p.mdx)("inlineCode",{parentName:"p"},"api_key"),":")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Cache pass - replace the ",(0,p.mdx)("inlineCode",{parentName:"p"},"<mesh_id>")," and ",(0,p.mdx)("inlineCode",{parentName:"p"},"<mesh_api_key>")," placeholders with the information from your mesh URL, which has the following structure: ",(0,p.mdx)("inlineCode",{parentName:"p"},"https://graph.adobe.io/api/<meshId>/graphql?api_key=<mesh_api_key>"),":"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_pass")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"pass"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"10"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'if (req.url ~ "^/api/") {\nset req.backend = F_graph_prod_adobe_io;\n}\n//apiMESH prod mapping\nif (req.url ~ "^/api/<mesh_id>") {\nset bereq.http.tenantuuid = "<mesh_id>";\nset bereq.http.x-api-key = "<mesh_api_key>";\n}\n# Optionally add another environment\n# //apiMESH stage mapping\n# if (req.url ~ "^/api/<mesh_id>") {\n# set bereq.http.tenantuuid = "<mesh_id>";\n# set bereq.http.x-api-key = "<mesh_api_key>";\n# }\n'))))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Cache fetch:"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_fetch")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"fetch"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"10"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'if (req.http.x-commerce-bypass-fastly-cache == "true") {return(pass);}\n'))))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},"Cache deliver:"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Name")," - api_mesh_deliver")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Type")," - ",(0,p.mdx)("strong",{parentName:"p"},"deliver"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"p"},"10"))),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("p",{parentName:"li"},(0,p.mdx)("strong",{parentName:"p"},"Content"),":"),(0,p.mdx)("pre",{parentName:"li"},(0,p.mdx)("code",{parentName:"pre",className:"language-vcl"},'if (req.http.x-commerce-bypass-fastly-cache == "true") {return(deliver);}\n'))))))),(0,p.mdx)("li",{parentName:"ol"},(0,p.mdx)("p",{parentName:"li"},"In ",(0,p.mdx)("strong",{parentName:"p"},"Fastly Configuration")," > ",(0,p.mdx)("strong",{parentName:"p"},"Backend Settings")," click ",(0,p.mdx)("strong",{parentName:"p"},"Create"),". Add a new backend with the following information:"),(0,p.mdx)("ul",{parentName:"li"},(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("strong",{parentName:"li"},"Condition")," - ",(0,p.mdx)("inlineCode",{parentName:"li"},'req.url ~ "^/api/(.*)" ,')),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("strong",{parentName:"li"},"Address")," - ",(0,p.mdx)("strong",{parentName:"li"},"graph.adobe.io")),(0,p.mdx)("li",{parentName:"ul"},(0,p.mdx)("strong",{parentName:"li"},"Priority")," - ",(0,p.mdx)("strong",{parentName:"li"},"8")))),(0,p.mdx)("li",{parentName:"ol"},(0,p.mdx)("p",{parentName:"li"},"In ",(0,p.mdx)("strong",{parentName:"p"},"Fastly Configuration")," click ",(0,p.mdx)("strong",{parentName:"p"},"Upload VCL to Fastly"),". Click ",(0,p.mdx)("strong",{parentName:"p"},"Save Config"),"."))),(0,p.mdx)("h2",{id:"configure-headers-in-api-mesh"},"Configure headers in API Mesh"),(0,p.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,p.mdx)("p",null,"After adding VCL snippets in the ",(0,p.mdx)("a",{parentName:"p",href:"#configure-fastly-in-adobe-commerce"},"Fastly Setup"),", your Commerce GraphQL URL is now in the following format with no ",(0,p.mdx)("inlineCode",{parentName:"p"},"api_key")," appended: ",(0,p.mdx)("inlineCode",{parentName:"p"},"https://graph.adobe.io/api/<meshId>/graphql")),(0,p.mdx)("p",null,"To distinguish between requests from users and requests from API Mesh, use the following configuration option to prevent Fastly from caching headers that come directly from API Mesh:"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-json"},'"x-commerce-bypass-fastly-cache": "true" \n')),(0,p.mdx)("p",null,"When bypassing the cache, you must also specify which headers should be preserved in the ",(0,p.mdx)("inlineCode",{parentName:"p"},"responseConfig"),":"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-json"},'"responseConfig": {\n  "headers": [\n    "x-magento-cache-id",\n    "x-magento-tags",\n    "set-cookie",\n    "pragma",\n    "cache-control",\n    "expires",\n    "x-content-type-options",\n    "x-xss-protection",\n    "x-platform-server"\n  ]\n}\n')),(0,p.mdx)("p",null,"Using Fastly also requires all queries to be ",(0,p.mdx)("inlineCode",{parentName:"p"},"GET")," queries. If you do not use ",(0,p.mdx)("inlineCode",{parentName:"p"},"GET")," queries, they will not be cached. To enforce this in your mesh, add the following configuration option:"),(0,p.mdx)("p",null,(0,p.mdx)("inlineCode",{parentName:"p"},'"useGETForQueries": true')),(0,p.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,p.mdx)("p",null,"Use the ",(0,p.mdx)("inlineCode",{parentName:"p"},"fastly-debug:1")," request header to get more information from Fastly on each request."),(0,p.mdx)("h3",{id:"fastly-example-mesh"},"Fastly example mesh"),(0,p.mdx)("p",null,"The following example mesh specifies the headers to cache, enables the cache bypass, and sets all queries to pass as ",(0,p.mdx)("inlineCode",{parentName:"p"},"GET")," queries."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "responseConfig": {\n      "includeHTTPDetails": true\n    },\n    "sources": [\n      {\n        "name": "Core",\n        "handler": {\n          "graphql": {\n            "endpoint": "https://venia.magento.com/graphql",\n            "operationHeaders": {\n              "x-magento-cache-id": "{context.headers[\'x-magentocache-id\']}",\n              "Store": "{context.headers[\'store\']}" ,\n              "Authorization": "{context.headers[\'authorization\']}",\n              "Content-Type": "application/json",\n              "x-commerce-bypass-fastly-cache": "true"\n            },\n            "useGETForQueries": true\n          }\n        },\n        "responseConfig": {\n          "headers": [\n            "x-magento-cache-id",\n            "x-cache",\n            "x-magento-tags",\n            "set-cookie",\n            "pragma",\n            "cache-control",\n            "expires",\n            "x-content-type-options",\n            "x-xss-protection",\n            "x-platform-server"\n          ]\n        }\n      }\n    ]\n  }\n}\n')),(0,p.mdx)("h3",{id:"fastly-prefixing"},"Fastly Prefixing"),(0,p.mdx)("p",null,'API mesh prefixes any Fastly source headers with their source name. For example, a source named "commerce" with an ',(0,p.mdx)("inlineCode",{parentName:"p"},"x-magento-cache-id")," header is converted to ",(0,p.mdx)("inlineCode",{parentName:"p"},"x-commerce-magento-cache-id"),'. However, if your endpoint URL contains "magento", API Mesh assumes you are connecting to an Adobe Commerce instance and does not prefix your headers with a source name. Using the previous example, your header would remain ',(0,p.mdx)("inlineCode",{parentName:"p"},"x-magento-cache-id"),"."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-gateway-fastly-md-4ff967c49004bfe6485e.js.map