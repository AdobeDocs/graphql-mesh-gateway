"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[1521],{5390:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return l},default:function(){return u}});var t=a(87462),o=a(45987),i=(a(35776),a(3905)),r=a(91515);const s=["components"],l={},d=(m="InlineAlert",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var m;const p={_frontmatter:l},c=r.Z;function u(e){let{components:n}=e,a=(0,o.Z)(e,s);return(0,i.mdx)(c,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"openapi-handlers"},"OpenAPI handlers"),(0,i.mdx)("p",null,"This handler allows you to load remote or local ",(0,i.mdx)("a",{parentName:"p",href:"https://swagger.io"},"OpenAPI (2/3) and Swagger")," schemas."),(0,i.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"When using a Swagger schema, API Mesh can only access ",(0,i.mdx)("inlineCode",{parentName:"p"},"application/json")," content from the Swagger API definition. API Mesh does not accept a wildcard (",(0,i.mdx)("inlineCode",{parentName:"p"},"*/*"),") as a content type."),(0,i.mdx)("p",null,"You can import it using remote/local ",(0,i.mdx)("inlineCode",{parentName:"p"},".json")," or ",(0,i.mdx)("inlineCode",{parentName:"p"},".yaml"),". To use a local source with an API handler, see ",(0,i.mdx)("a",{parentName:"p",href:"index.md#reference-local-files-in-handlers"},"Reference local file handlers")," for more information."),(0,i.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"If your source handler's schema is modified, you must ",(0,i.mdx)("a",{parentName:"p",href:"../../gateway/create-mesh.md#update-an-existing-mesh"},"update your mesh")," to allow API Mesh to cache any changes."),(0,i.mdx)("p",null,"To get started, use the handler in your Mesh config file:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyOpenapiApi",\n      "handler": {\n        "openapi": {\n          "source": "./monolith-open-api-schema.json"\n        }\n      }\n    }\n  ]\n}\n')),(0,i.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"This handler is based on the ",(0,i.mdx)("a",{parentName:"p",href:"json-schema.md"},"JSON Schema handler"),", so its configurations also apply to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"openapi")," handler."),(0,i.mdx)("h2",{id:"naming-convention"},"Naming convention"),(0,i.mdx)("p",null,"We use the ",(0,i.mdx)("inlineCode",{parentName:"p"},"operationId")," for names, and aim to keep it as close as possible to the origin."),(0,i.mdx)("h3",{id:"type-naming"},"Type naming"),(0,i.mdx)("p",null,"We adjust the ",(0,i.mdx)("inlineCode",{parentName:"p"},"operationId")," only when necessary according to the GraphQL spec:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"- Characters, such as white space, `.`, `/`, `:` and `-`, are replaced with an underscore (`_`).\n- Other characters which are not digits or Latin letters are replaced with their character codes.\n- If the first character of a name is a digit, we prefix it with an underscore (`_`), because GraphQL does not allow initial digits.\n")),(0,i.mdx)("h3",{id:"unnamed-types"},"Unnamed types"),(0,i.mdx)("p",null,"We use path-based naming. So names could be structured like ",(0,i.mdx)("inlineCode",{parentName:"p"},"query_getUsers_items_firstName"),"."),(0,i.mdx)("h2",{id:"headers-from-context"},"Headers from context"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyGraphQLApi",\n      "handler": {\n        "openapi": {\n          "source": "./my-schema.json",\n          "operationHeaders": {\n            "Authorization": "Bearer {context.headers[\'x-my-api-token\']}"\n          }\n        }\n      }\n    }\n  ]\n}\n')),(0,i.mdx)("h2",{id:"advanced-cookies-handling"},"Advanced cookies handling"),(0,i.mdx)("p",null,"When building a web application, for security reasons, cookies are often used for authentication. Mobile applications on the other end, tend to use an HTTP header."),(0,i.mdx)("h3",{id:"setting--unsetting-the-cookie"},"Setting / Unsetting the cookie"),(0,i.mdx)("p",null,"Of course, being able to use your mesh as a Gateway for both the mobile application and web application is nice, but there's one thing missing: the setting of the cookie for the web application."),(0,i.mdx)("p",null,"For that, we need to access the HTTP response that is sent back to the client. Luckily, we can do so in ",(0,i.mdx)("inlineCode",{parentName:"p"},"additionalResolvers"),". So we need to create two new resolvers, one for login and one for logout, and manage the cookie in their code."),(0,i.mdx)("p",null,"The first step is to edit the ",(0,i.mdx)("inlineCode",{parentName:"p"},"mesh.json")," file, and add the following at the end:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "additionalTypeDefs": "extend type Mutation {\\n  login(credentials: Credentials!): String\\n  logout: Boolean\\n}\\n",\n  "additionalResolvers": [\n    "./src/additional-resolvers.js"\n  ]\n}\n')),(0,i.mdx)("p",null,"Then manage the cookie in the new resolvers:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"// lifespan of our cookie\nconst oneYear = 365 * 24 * 3600\n\nconst resolvers = {\n  Mutation: {\n    async login(root, args, context, info) {\n      // Call the Rest API's login operation\n      const result = await context.Rest.Mutation.accountLogin({\n        root,\n        args: {\n          credentials: args.credentials\n        },\n        context,\n        info\n      })\n      // if `result` contains a JWT token, you could instead decode it and set `Expires`\n      // to the JWT token's expiration date\n      res.set('Set-Cookie', `accessToken=${result}; Path=/; Secure; HttpOnly; Max-Age=${oneYear};`)\n\n      return result\n    },\n    logout(root, args, { res }) {\n      // use old date to unset cookie\n      res.set('Set-Cookie', `accessToken=logout; Path=/; Secure; HttpOnly; Expires=Thu, 1 Jan 1970 00:00:00 GMT;`)\n\n      return true\n    },\n  },\n}\n\nmodule.exports = { resolvers }\n")),(0,i.mdx)("h2",{id:"callbacks-as-subscriptions"},"Callbacks as Subscriptions"),(0,i.mdx)("p",null,"The OpenAPI handler can process OAS Callbacks as GraphQL Subscriptions. It uses your PubSub implementation to consume the data. But you have to define webhooks for individual callbacks to make it work."),(0,i.mdx)("h2",{id:"loading-source-from-a-cdn"},"Loading source from a CDN"),(0,i.mdx)("p",null,"API Mesh supports loading sources from a CDN or schema registry by using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"source")," property."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyApi",\n      "handler": {\n        "openapi": {\n          "source": "https://cdn.<your cdn>.graphql",\n          "schemaHeaders": {\n            "X-CDN-Key": "abc123+d4/5e="\n          }\n        }\n      }\n    }\n  ]\n}\n')),(0,i.mdx)("h2",{id:"config-api-reference"},"Config API reference"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"source")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"Any"),", required) - A pointer to your API source - could be a local file, remote file, or url endpoint"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"sourceFormat")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"String (json | yaml)"),") - Format of the source file"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"operationHeaders")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object representing the Headers to add to the runtime of the API calls"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"schemaHeaders")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - If you are using a remote URL endpoint to fetch your schema, you can set headers for the HTTP request to fetch your schema."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"baseUrl")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"String"),") - Specifies the URL that all paths will be based on.\nOverrides the server object in the OAS."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"qs")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object representing the query search parameters to add to the API calls"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"includeHttpDetails")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"Boolean"),") - Include HTTP Response details to the result object")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-reference-handlers-openapi-md-7eb13410ec602c1f3295.js.map