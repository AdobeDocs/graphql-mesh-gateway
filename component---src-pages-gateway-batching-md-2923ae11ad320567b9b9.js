"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[9938],{63834:function(e,n,i){i.r(n),i.d(n,{_frontmatter:function(){return l},default:function(){return c}});var t=i(87462),a=i(45987),r=(i(35776),i(3905)),o=i(91515);const s=["components"],l={},d=(m="InlineAlert",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var m;const u={_frontmatter:l},p=o.Z;function c(e){let{components:n}=e,i=(0,a.Z)(e,s);return(0,r.mdx)(p,(0,t.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"batching-with-api-mesh-for-adobe-developer-app-builder"},"Batching with API Mesh for Adobe Developer App Builder"),(0,r.mdx)("p",null,"Batching allows you to combine a group of requests into a single request, turning multiple queries into a single one. Compared to sending multiple queries simultaneously, batched requests result in better response times. They also avoid issues with rate-limiting."),(0,r.mdx)("h2",{id:"the-n1-problem"},"The ",(0,r.mdx)("inlineCode",{parentName:"h2"},"n+1")," problem"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"n+1")," problem occurs when you request multiple pieces of information that cause the system to make multiple (",(0,r.mdx)("inlineCode",{parentName:"p"},"n"),") queries to a source instead of using a single query. Since each query takes approximately the same amount of time, processing many queries can lead to degraded performance. In this example, a Reviews API contains reviews of your products by SKU. Without batching, you would need to query each SKU individually to return the corresponding reviews."),(0,r.mdx)("h2",{id:"example-without-batching"},"Example (without batching)"),(0,r.mdx)("p",null,"Consider a scenario where you are using the following mesh, where the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Reviews")," source is a third-party API that contains reviews for your products by SKU. Each review consists of a ",(0,r.mdx)("inlineCode",{parentName:"p"},"review"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"customer_name"),", and ",(0,r.mdx)("inlineCode",{parentName:"p"},"rating")," field."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "Products",\n        "handler": {\n          "graphql": {\n            "endpoint": "https://venia.magento.com/graphql"\n          }\n        }\n      },\n      {\n        "name": "Reviews",\n        "handler": {\n          "graphql": {\n            "endpoint": "<Reviews_API_URL>",\n            "useGETForQueries": true\n          }\n        }\n      }\n    ],\n    "additionalTypeDefs": "extend type ConfigurableProduct { customer_reviews: [productReviewslist]} ",\n    "additionalResolvers": [\n      {\n        "targetFieldName": "customer_reviews",\n        "targetTypeName": "ConfigurableProduct",\n        "sourceName": "Reviews",\n        "sourceTypeName": "Query",\n        "sourceFieldName": "productsReviews",\n        "requiredSelectionSet": "{ sku }",\n        "sourceArgs": {\n          "sku": "{root.sku}"\n        }\n      }\n    ],\n    "responseConfig": {\n      "includeHTTPDetails": true\n    }\n  }\n}\n')),(0,r.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Use ",(0,r.mdx)("inlineCode",{parentName:"p"},'"includeHTTPDetails": true')," to see response details that indicate how many calls your mesh made to each source."),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"./extending-unified-schema.md"},"custom resolver")," extends the type ",(0,r.mdx)("inlineCode",{parentName:"p"},"ConfigurableProdcut")," with a new ",(0,r.mdx)("inlineCode",{parentName:"p"},"customer_reviews")," field, which allows nesting review fields inside of queries against the Venia source. The resolver is composed of the following components:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"The target (",(0,r.mdx)("inlineCode",{parentName:"li"},"targetTypeName"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"targetFieldName"),") - describes the queried field."),(0,r.mdx)("li",{parentName:"ul"},"The source (",(0,r.mdx)("inlineCode",{parentName:"li"},"sourceName"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"sourceTypeName"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"sourceFieldName"),") - describes where the data is resolved for the target field."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"requiredSelectionSet")," fetches the required arguments."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"sourceArgs")," maps the ",(0,r.mdx)("inlineCode",{parentName:"li"},"requiredSelectionSet")," argument to the source.")),(0,r.mdx)("p",null,"The following query causes multiple calls to the Reviews API:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-graphql"},'{\n  products(filter: { sku: { in: ["VD03", "VT12"] } }) {\n    items {\n      ... on ConfigurableProduct {\n        sku\n        name\n        customer_reviews {\n          sku\n          reviews {\n            review\n            customer_name\n            rating\n          }\n        }\n        __typename\n      }\n    }\n  }\n}\n')),(0,r.mdx)("h2",{id:"batching-example"},"Batching example"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"Reviews")," source takes an array of product SKUs and returns an array of reviews for each SKU. To make a single network request to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Reviews")," source for multiple SKUs, add ",(0,r.mdx)("inlineCode",{parentName:"p"},"keysArg")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"keyField")," to your mesh."),(0,r.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Request batching using API Mesh requires a source endpoint capable of processing an array of values."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "meshConfig": {\n        "sources": [\n            {\n                "name": "Products",\n                "handler": {\n                    "graphql": {\n                        "endpoint": " https://venia.magento.com/graphql"\n                    }\n                }\n            },\n            {\n                "name": "Reviews",\n                "handler": {\n                    "graphql": {\n                        "endpoint": "<Reviews_API_URL>",\n                        "useGETForQueries":true\n                    }\n                }\n            }\n        ],\n        "additionalTypeDefs": "extend type ConfigurableProduct { customer_reviews: productReviewslist} " ,\n        "additionalResolvers" : [\n          {\n            "targetFieldName" : "customer_reviews",\n            "targetTypeName" : "ConfigurableProduct",\n            "sourceName": "Reviews",\n            "sourceTypeName": "Query",\n            "sourceFieldName": "productsReviews",\n            "keysArg": "sku",\n            "keyField": "sku"\n        }],\n        "responseConfig": {\n            "includeHTTPDetails": true\n        }\n    }\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"requiredSelectionSet")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"sourceArgs")," are replaced with ",(0,r.mdx)("inlineCode",{parentName:"p"},"keysarg")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"keyField"),":"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"keysArg")," provides the name of the primary key argument. For this example, the ",(0,r.mdx)("inlineCode",{parentName:"li"},"keysArg")," field is the argument name used when sending an array of SKUs to fetch multiple reviews."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"keyField")," provides the key value for each item in the batched query. For this example, the ",(0,r.mdx)("inlineCode",{parentName:"li"},"keyField")," indicates which Product field provides the SKU value to the review service.")),(0,r.mdx)("p",null,"With the updated mesh, using the ",(0,r.mdx)("a",{parentName:"p",href:"#example-without-batching"},"previous query")," returns the same information, but only makes one call to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Reviews")," source for multiple SKUs."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-gateway-batching-md-2923ae11ad320567b9b9.js.map