{"version":3,"file":"component---src-pages-gateway-extending-unified-schema-md-0eef872699646061ef5f.js","mappings":"mSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKU,YALF,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,2CACH,4CACL,mBAAG,cAAGC,WAAW,IACb,KAAQ,8CACL,8BAAkC,kBAAgB,uBAAYA,WAAW,KAAM,uBAAoC,qEAC1H,kBAAK,6BAA2B,uBAAYA,WAAW,KAAM,uBAAoC,wDAAsD,cAAGA,WAAW,IACjK,KAAQ,2DACP,uBAAYA,WAAW,KAAM,cAA2B,SAAa,kBAC1E,eACE,GAAM,oCACH,iBAAe,uBAAYA,WAAW,MAAO,yBAClD,kBAAK,iCAA+B,uBAAYA,WAAW,KAAM,uBAAoC,yGACrG,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,QAAM,uBAAYA,WAAW,KAAM,SAAsB,uGAEhF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,QAAM,uBAAYA,WAAW,KAAM,gBAA6B,uBAAqB,cAAGA,WAAW,IACpH,KAAQ,gHACL,MAAI,uBAAYA,WAAW,KAAM,SAAsB,SAAa,wGAG/E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,yxEAyCP,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,SAAsB,wCAAsC,uBAAYA,WAAW,KAAM,cAA2B,MACxL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,m5CAwCP,kBAAK,SAAO,uBAAYA,WAAW,KAAM,cAA2B,sBAAoB,uBAAYA,WAAW,KAAM,iBAA8B,cAAY,uBAAYA,WAAW,KAAM,uBAAoC,mBAAiB,uBAAYA,WAAW,KAAM,iBAA8B,gFAA8E,cAAGA,WAAW,IACpY,KAAQ,iHACP,uBAAYA,WAAW,KAAM,qBAAkC,SAAa,6CAA2C,uBAAYA,WAAW,KAAM,mBAAgC,+BACzL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAM,iBAA8B,iEAEhF,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAM,gBAA6B,8CAA4C,uBAAYA,WAAW,KAAM,uBAAoC,eAAa,uBAAYA,WAAW,KAAM,iBAA8B,6BAEpQ,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAM,QAAqB,MAAI,uBAAYA,WAAW,KAAM,WAAwB,MAAI,uBAAYA,WAAW,KAAM,QAAqB,UAAQ,uBAAYA,WAAW,KAAM,QAAqB,kEAGlP,kBAAK,8EAA4E,uBAAYA,WAAW,KAAM,iBAA8B,mBAAiB,uBAAYA,WAAW,KAAM,iBAA8B,mCAAiC,uBAAYA,WAAW,KAAM,gBAA6B,gHACnT,kBAAK,yHAAuH,uBAAYA,WAAW,KAAM,sBAAmC,iBAAe,uBAAYA,WAAW,KAAM,iBAA8B,iCAA+B,uBAAYA,WAAW,KAAM,SAAsB,MACxV,SAACX,EAAD,CAAWY,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,gBAAgBJ,QAAQ,eAC9E,eACE,GAAM,iBACH,kBACL,qBAAK,iBAAMC,WAAW,MAClB,UAAa,oBACV,kOAgBP,eACE,GAAM,YACH,aACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,2qGAoGV,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://graphql-mesh-gateway/./src/pages/gateway/extending-unified-schema.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"extend-the-schema-with-custom-resolvers\"\n    }}>{`Extend the schema with custom resolvers`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../reference/combining-multiple-sources.md\"\n      }}>{`Combining multiple Sources`}</a>{` explains how `}<inlineCode parentName=\"p\">{`additionalResolvers`}</inlineCode>{` can shape and augment the unified schema with custom resolvers.`}</p>\n    <p>{`Alternatively, using the `}<inlineCode parentName=\"p\">{`additionalResolvers`}</inlineCode>{` config allows you to upload a custom resolver as a `}<a parentName=\"p\" {...{\n        \"href\": \"./source-handlers.md#reference-local-files-in-handlers\"\n      }}><inlineCode parentName=\"a\">{`JavaScript`}</inlineCode>{` file`}</a>{` to the Mesh.`}</p>\n    <h2 {...{\n      \"id\": \"programmatic-additionalresolvers\"\n    }}>{`Programmatic `}<inlineCode parentName=\"h2\">{`additionalResolvers`}</inlineCode></h2>\n    <p>{`In this example, we will use `}<inlineCode parentName=\"p\">{`additionalResolvers`}</inlineCode>{` to apply a set of discounts to products in Adobe Commerce. The following example uses two handlers:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`Venia`}</inlineCode>{` handler is a publicly available Adobe Commerce GraphQL endpoint for the Venia sample storefront.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`DiscountsAPI`}</inlineCode>{` handler points to `}<a parentName=\"p\" {...{\n            \"href\": \"https://raw.githubusercontent.com/AdobeDocs/graphql-mesh-gateway/main/src/pages/_examples/discounts-api.json\"\n          }}>{`a `}<inlineCode parentName=\"a\">{`.json`}</inlineCode>{` file`}</a>{` that contains key-value pairs of sample item names and their corresponding discount percentages.`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"Venia\",\n        \"handler\": {\n          \"graphql\": {\n            \"endpoint\": \"https://venia.magento.com/graphql\"\n          }\n        }\n      },\n      {\n        \"name\": \"DiscountsAPI\",\n        \"handler\": {\n          \"JsonSchema\": {\n            \"baseUrl\": \"https://raw.githubusercontent.com/AdobeDocs/graphql-mesh-gateway/main/src/pages/_examples\",\n            \"operations\": [\n              {\n                \"type\": \"Query\",\n                \"field\": \"discounts\",\n                \"path\": \"/discounts-api.json\",\n                \"method\": \"GET\",\n                \"responseSample\": \"https://raw.githubusercontent.com/AdobeDocs/graphql-mesh-gateway/main/src/pages/_examples/discounts-api.json\"\n              }\n            ]\n          }\n        }\n      }\n    ],\n    \"additionalResolvers\": [\n      \"./additional-resolvers.js\"\n    ],\n    \"files\": [\n      {\n        \"path\": \"./additional-resolvers.js\",\n        \"content\": \"\\\\r\\\\nmodule.exports = {\\\\r\\\\n\\\\tresolvers: {\\\\r\\\\n\\\\t\\\\tConfigurableProduct: {\\\\r\\\\n\\\\t\\\\t\\\\tspecial_price: {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tselectionSet: \\\\\"{ name price_range { maximum_price { final_price { value } } } }\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tresolve: (root, args, context, info) => {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tlet max = 0;\\\\r\\\\n\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\ttry {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tmax = root.price_range.maximum_price.final_price.value;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t} catch (e) {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t// ignore\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\treturn context.DiscountsAPI.Query.discounts(\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{ root, args, context, info, selectionSet: \\\\\"{ name discount }\\\\\" }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t)\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t.then((response) => {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tconst discountConfig = response.find((discount) => discount.name === root.name);\\\\r\\\\n\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tif (discountConfig) {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\treturn max * ((100 - discountConfig.discount) / 100);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t} else {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\treturn max\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t})\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t.catch(() => {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\treturn null;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t});\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t},\\\\r\\\\n};\\\\r\\\\n\"\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <p>{`The previous example contains a `}<inlineCode parentName=\"p\">{`files`}</inlineCode>{` object that contains the following `}<inlineCode parentName=\"p\">{`javascript`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n    resolvers: {\n        ConfigurableProduct: {\n            special_price: {\n                selectionSet: '{ name price_range { maximum_price { final_price { value } } } }',\n                resolve: (root, args, context, info) => {\n                    let max = 0;\n\n                    try {\n                        max = root.price_range.maximum_price.final_price.value;\n                    } catch (e) {\n                        // ignore\n                    }\n\n                    return context.DiscountsAPI.Query.discounts({\n                            root,\n                            args,\n                            context,\n                            info,\n                            selectionSet: '{ name discount }',\n                        })\n                        .then(response => {\n                            let discount = 0;\n                            const discountConfig = response.find(discount => discount.name === root.name);\n\n                            if (discountConfig) {\n                                discount = discountConfig.discount;\n                            }\n\n                            return max * ((100 - discount) / 100);\n                        })\n                        .catch(() => {\n                            return null;\n                        });\n                },\n            },\n        },\n    },\n};\n`}</code></pre>\n    <p>{`This `}<inlineCode parentName=\"p\">{`javascript`}</inlineCode>{` file targets the `}<inlineCode parentName=\"p\">{`special_price`}</inlineCode>{` field on `}<inlineCode parentName=\"p\">{`ConfigurableProduct`}</inlineCode>{` that uses the `}<inlineCode parentName=\"p\">{`maximum_price`}</inlineCode>{` for a product and then applies the discount listed for that product in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/AdobeDocs/graphql-mesh-gateway/main/src/pages/_examples/discounts-api.json\"\n      }}><inlineCode parentName=\"a\">{`discountsapi.json`}</inlineCode>{` file`}</a>{`. The following arguments define how the `}<inlineCode parentName=\"p\">{`custom resolver`}</inlineCode>{` interacts with your mesh:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`special_price`}</inlineCode>{` - the name of the field we are adding a custom resolver to`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`selectionSet`}</inlineCode>{` - the information from the parent field, `}<inlineCode parentName=\"p\">{`ConfigurableProduct`}</inlineCode>{`, that the `}<inlineCode parentName=\"p\">{`special_price`}</inlineCode>{` field needs to resolve`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`root`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`context`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`args`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`info`}</inlineCode>{` - are the parameters provided to the new resolver function`}</p>\n      </li>\n    </ul>\n    <p>{`Running the following query results in a response that lists the original `}<inlineCode parentName=\"p\">{`maximum_price`}</inlineCode>{` value and the `}<inlineCode parentName=\"p\">{`special_price`}</inlineCode>{` that was calculated using the `}<inlineCode parentName=\"p\">{`DiscountsAPI`}</inlineCode>{` file. In this example, we are searching for \"sweater\", but you could modify it to search for any products.`}</p>\n    <p>{`In the following response, you can see that the \"Roxana Cropped Sweater\" and the \"Hanna Sweater\" we specified in our `}<inlineCode parentName=\"p\">{`discounts-api.json`}</inlineCode>{` file have a `}<inlineCode parentName=\"p\">{`special_price`}</inlineCode>{` that is 10% less than their `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"graphql, json\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"graphql-query\"\n    }}>{`GraphQL Query`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  products(search: \"sweater\") {\n    items {\n      name\n      special_price\n      price_range {\n        maximum_price {\n          final_price {\n            value\n          }\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"response\"\n    }}>{`Response`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"data\": {\n        \"products\": {\n            \"items\": [\n                {\n                    \"name\": \"Juno Sweater\",\n                    \"special_price\": 54.4,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 54.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Hanna Sweater\",\n                    \"special_price\": 70.56,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 78.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Echo Sweater\",\n                    \"special_price\": 62.4,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 62.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Corina Lace-Back Sweater\",\n                    \"special_price\": 86.4,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 86.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Roxana Cropped Sweater\",\n                    \"special_price\": 56.16,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 62.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Helena Cardigan\",\n                    \"special_price\": 78.4,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 78.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Rosalina Cardigan\",\n                    \"special_price\": 78.4,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 78.4\n                            }\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Brigid Boucle Cardigan\",\n                    \"special_price\": 94.4,\n                    \"price_range\": {\n                        \"maximum_price\": {\n                            \"final_price\": {\n                                \"value\": 94.4\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"extensions\": {}\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}