"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[4186],{13024:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return m},default:function(){return c}});var r,o=a(87462),t=a(63366),i=(a(15007),a(64983)),d=a(91515),l=["components"],m={},s=(r="InlineAlert",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),p={_frontmatter:m},h=d.Z;function c(e){var n=e.components,a=(0,t.Z)(e,l);return(0,i.mdx)(h,(0,o.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"graphql-handlers"},"GraphQL handlers"),(0,i.mdx)("p",null,"This handler allows you to load remote GraphQL schemas and use them with schema-stitching, based on ",(0,i.mdx)("inlineCode",{parentName:"p"},"graphql-tools"),". To get started, use the handler in your Mesh config file:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyGraphQLApi",\n      "handler": {\n        "graphql": {\n          "endpoint": "https://my-service-url/graphql"\n        }\n      }\n    }\n  ]\n}\n')),(0,i.mdx)("p",null,"GraphQL handlers can also use local sources, see ",(0,i.mdx)("a",{parentName:"p",href:"../handlers/index.md#reference-local-files-in-handlers"},"Reference local file handlers")," for more information."),(0,i.mdx)("h2",{id:"headers-from-context"},"Headers from context"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "name": "MyGraphQLApi",\n      "handler": {\n        "graphql": {\n          "endpoint": "https://my-service-url/graphql",\n          "operationHeaders": {\n            "Authorization": "Bearer {context.headers[\'x-my-api-token\']}"\n          // Do not use capital letters in header names.\n          }\n        }\n      }\n    }\n  ]\n}\n')),(0,i.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"Header names must be in lowercase. Uppercase characters within a header name are automatically converted into lowercase."),(0,i.mdx)("h2",{id:"fetching-sdl-or-introspection-from-cdn-or-somewhere"},"Fetching SDL or introspection from CDN or somewhere"),(0,i.mdx)("p",null,"Imagine that introspection is disabled in the production environment of your GraphQL source, and you want to provide your SDL or introspection separately:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "sources": [\n        {\n            "name": "MyGraphQLApi",\n            "handler": {\n                "graphql": {\n                    "endpoint": "https://api.github.com/graphql",\n                    "operationHeaders": {\n                        "Authorization": "Bearer {context.headers[\'GITHUB_TOKEN\']}"\n                    }\n                }\n            }\n        }\n    ]\n}\n')),(0,i.mdx)("p",null,"In this case, CLI's ",(0,i.mdx)("inlineCode",{parentName:"p"},"build")," command won't save the introspection in the artifacts, so your Mesh won't start if the ",(0,i.mdx)("inlineCode",{parentName:"p"},"source")," URL is down."),(0,i.mdx)("h2",{id:"local-schemas"},"Local Schemas"),(0,i.mdx)("p",null,"We recommend providing local schema by using the ",(0,i.mdx)("a",{parentName:"p",href:"../../gateway/extending-unified-schema.md"},(0,i.mdx)("inlineCode",{parentName:"a"},"additionalTypeDefs"))," and ",(0,i.mdx)("a",{parentName:"p",href:"../multiple-apis.md#extending-graphql-schema-with-additionaltypedefs"},(0,i.mdx)("inlineCode",{parentName:"a"},"additionalResolvers"))," configuration options."),(0,i.mdx)("h2",{id:"config-api-reference"},"Config API Reference"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"endpoint")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"String"),", required) - A URL or file path to your remote GraphQL endpoint.\nIf you provide a path to a code file(js or ts),\nother options will be ignored and the schema exported from the file will be used directly."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"schemaHeaders")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"Any"),") - JSON object representing the Headers to add to the runtime of the API calls only for schema introspection"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"operationHeaders")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"JSON"),") - JSON object representing the Headers to add to the runtime of the API calls only for operation during runtime"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"useGETForQueries")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"Boolean"),") - Use HTTP GET for Query operations"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"method")," (type: ",(0,i.mdx)("inlineCode",{parentName:"li"},"String (GET | POST)"),") - HTTP method used for GraphQL operations")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-reference-handlers-graphql-md-1b55323b574170d502d8.js.map