{"version":3,"file":"component---src-pages-mesh-best-practices-performance-md-aee0eeb92de70945220d.js","mappings":"mSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,uBACH,wBACL,kBAAK,iKACL,kBAAK,sCAAoC,uBAAYC,WAAW,KAAM,0BAAuC,yBAAuB,cAAGA,WAAW,IAC9I,KAAQ,4DACL,oCAAwC,MAC/C,kBAAK,gOAA8N,uBAAYA,WAAW,KAAM,cAA2B,aAC3R,kBAAK,4FACL,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,yBAAuB,uBAAYC,WAAW,KAAM,0BAAuC,0EAChG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,kEAUV,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://graphql-mesh-gateway/./src/pages/mesh/best-practices/performance.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"performance-testing\"\n    }}>{`Performance testing`}</h1>\n    <p>{`When you performance test edge meshes on Adobe Developer App Builder, you need to account for cold starts to get an accurate measurement of the performance.`}</p>\n    <p>{`If applicable, you should use the `}<inlineCode parentName=\"p\">{`Connection: Keep-Alive`}</inlineCode>{` header described in `}<a parentName=\"p\" {...{\n        \"href\": \"../basic/create-mesh.md#optimizing-edge-mesh-performance\"\n      }}>{`Optimizing edge mesh performance`}</a>{`.`}</p>\n    <p>{`Additionally, you can prime your mesh by making several repeated calls to the mesh that do not make calls to your sources. This is also useful for increasing performance using cURL or other tools that do not support the `}<inlineCode parentName=\"p\">{`Keep-Alive`}</inlineCode>{` header.`}</p>\n    <p>{`Repeat the following query 100-200 times to prime your mesh before performance testing:`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you are using the `}<inlineCode parentName=\"p\">{`Connection: Keep-Alive`}</inlineCode>{` header, you only need to prime with one or two calls before testing.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  __schema {\n    queryType {\n      name\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}