"use strict";(self.webpackChunkgraphql_mesh_gateway=self.webpackChunkgraphql_mesh_gateway||[]).push([[3428],{31655:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return o},default:function(){return x}});var i=a(87462),l=a(45987),m=(a(35776),a(3905)),d=a(91515);const t=["components"],o={},r=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)});var p;const s={_frontmatter:o},C=d.Z;function x(e){let{components:n}=e,a=(0,l.Z)(e,t);return(0,m.mdx)(C,(0,i.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"naming-convention-transform"},(0,m.mdx)("inlineCode",{parentName:"h1"},"naming-convention")," transform"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"naming-convention")," transforms allow you to apply casing and other conventions to your response. In the example below, ",(0,m.mdx)("inlineCode",{parentName:"p"},"enumValues")," fields are converted to uppercase, while ",(0,m.mdx)("inlineCode",{parentName:"p"},"fieldNames")," are converted to camel case to enforce consistency."),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "PWA",\n        "handler": {\n          "graphql": {\n            "endpoint": "https://example2.com/graphql"\n          }\n        },\n        "transforms": [\n          {\n            "namingConvention": {\n              "enumValues": "upperCase",\n              "fieldNames": "camelCase"\n            }\n          }\n        ]\n      }\n    ]\n  },\n}\n')),(0,m.mdx)("p",null,"The ",(0,m.mdx)("inlineCode",{parentName:"p"},"naming-convention")," transforms allow you to apply casing and other conventions to your response."),(0,m.mdx)("h2",{id:"usage"},"Usage"),(0,m.mdx)("p",null,"The following example converts all of your ",(0,m.mdx)("inlineCode",{parentName:"p"},"fieldNames")," to lower case in the Adobe Commerce source:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-JSON"},'{\n  "meshConfig": {\n    "sources": [\n      {\n        "name": "AdobeCommerce",\n        "transforms": [\n          {\n            "namingConvention": {\n              "fieldNames": "lowerCase"\n            }\n          }\n        ],\n        "handler": {\n          "graphql": {\n            "endpoint": "https://venia.magento.com/graphql"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,m.mdx)(r,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"For information about ",(0,m.mdx)("inlineCode",{parentName:"p"},"bare")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"wrap")," modes, please read ",(0,m.mdx)("a",{parentName:"p",href:"./bare-vs-wrap.md"},(0,m.mdx)("inlineCode",{parentName:"a"},"bare")," vs ",(0,m.mdx)("inlineCode",{parentName:"a"},"wrap")),"."),(0,m.mdx)("h2",{id:"config-api-reference"},"Config API Reference"),(0,m.mdx)(r,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"The following case options should not be used because they violate the ",(0,m.mdx)("a",{href:"https://spec.graphql.org/October2021/#sec-Names)"},"GraphQL spec"),". These options will likely be deprecated in the future.",(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"capitalCase")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"dotCase")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"headerCase")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"noCase")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"paramCase")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"pathCase")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"sentenceCase")))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"mode")," (type: String (",(0,m.mdx)("inlineCode",{parentName:"li"},"bare")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"wrap"),")) - Specify to apply naming-convention transforms to bare schema or by wrapping original schema"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"typeNames")," (type: String (",(0,m.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"fieldNames")," (type: String (",(0,m.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"enumValues")," (type: String (",(0,m.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"fieldArgumentNames")," (type: String (",(0,m.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,m.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-reference-transforms-naming-convention-md-b81bb1cac3a47b9ad019.js.map