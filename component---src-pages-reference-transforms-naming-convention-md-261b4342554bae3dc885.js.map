{"version":3,"file":"component---src-pages-reference-transforms-naming-convention-md-261b4342554bae3dc885.js","mappings":"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","sources":["webpack://graphql-mesh-gateway/./src/pages/reference/transforms/naming-convention.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"naming-convention-transform\"\n    }}><inlineCode parentName=\"h1\">{`naming-convention`}</inlineCode>{` transform`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`naming-convention`}</inlineCode>{` transforms allow you to apply casing and other conventions to your response.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`The following example converts all of your `}<inlineCode parentName=\"p\">{`fieldNames`}</inlineCode>{` to lower case in the Adobe Commerce source:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-JSON\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"AdobeCommerce\",\n        \"transforms\": [\n          {\n            \"namingConvention\": {\n              \"fieldNames\": \"lowerCase\"\n            }\n          }\n        ],\n        \"handler\": {\n          \"graphql\": {\n            \"endpoint\": \"https://venia.magento.com/graphql\"\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For information about `}<inlineCode parentName=\"p\">{`bare`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`wrap`}</inlineCode>{` modes, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"index.md#two-different-modes\"\n      }}>{`dedicated section`}</a></p>\n    <h2 {...{\n      \"id\": \"config-api-reference\"\n    }}>{`Config API Reference`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>\nThe following case options should not be used because they violate the [GraphQL](https://spec.graphql.org/June2018/#sec-Names):\n      <ul>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`capitalCase`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dotCase`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`headerCase`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`noCase`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`paramCase`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pathCase`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sentenceCase`}</inlineCode></li>\n      </ul>\n    </p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mode`}</inlineCode>{` (type: String (`}<inlineCode parentName=\"li\">{`bare`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`wrap`}</inlineCode>{`)) - Specify to apply naming-convention transforms to bare schema or by wrapping original schema`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`typeNames`}</inlineCode>{` (type: String (`}<inlineCode parentName=\"li\">{`camelCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`capitalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`constantCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`dotCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`headerCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`noCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`paramCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pascalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pathCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`sentenceCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`snakeCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`upperCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`lowerCase`}</inlineCode>{`))`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fieldNames`}</inlineCode>{` (type: String (`}<inlineCode parentName=\"li\">{`camelCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`capitalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`constantCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`dotCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`headerCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`noCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`paramCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pascalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pathCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`sentenceCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`snakeCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`upperCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`lowerCase`}</inlineCode>{`))`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`enumValues`}</inlineCode>{` (type: String (`}<inlineCode parentName=\"li\">{`camelCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`capitalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`constantCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`dotCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`headerCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`noCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`paramCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pascalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pathCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`sentenceCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`snakeCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`upperCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`lowerCase`}</inlineCode>{`))`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fieldArgumentNames`}</inlineCode>{` (type: String (`}<inlineCode parentName=\"li\">{`camelCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`capitalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`constantCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`dotCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`headerCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`noCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`paramCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pascalCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`pathCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`sentenceCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`snakeCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`upperCase`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`lowerCase`}</inlineCode>{`))`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}